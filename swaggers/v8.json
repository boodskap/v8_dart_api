{
  "swagger": "2.0",
  "produces": [
    "application/json"
  ],
  "info": {
    "version": "8.0.0",
    "title": "Boodskap IoT Digital Twin Platform API",
    "description": "Boodskap IoT Digital Twin Platform API",
    "termsOfService": "https:/boodskap.io/terms-conditions",
    "contact": {
      "name": "Boodskap Team"
    },
    "license": {
      "name": "MIT"
    }
  },
  "host": "local.boodskap.io",
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "paths": {
    "/IoT/domain/info/{domainKey}": {
      "get": {
        "tags": [
          "IoT"
        ],
        "summary": "Get Twin Domain info",
        "description": "Get Twin Domain information",
        "operationId": "getDomainInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "domainKey",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/DomainEntityRes"
            }
          }
        }
      }
    },
    "/IoT/login": {
      "post": {
        "tags": [
          "IoT"
        ],
        "summary": "Do Login",
        "description": "Login a user into digital twin domain",
        "operationId": "loginUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/LoginRes"
            }
          }
        }
      }
    },
    "/IoT/register": {
      "post": {
        "tags": [
          "IoT"
        ],
        "summary": "Do Registration",
        "description": "Register an new domain",
        "operationId": "registerDomain",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "testMode",
            "in": "header",
            "type": "boolean",
            "required": false
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DomainInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegistrationRes"
            }
          }
        }
      }
    },
    "/IoT/registration/verify": {
      "post": {
        "tags": [
          "IoT"
        ],
        "summary": "Do Verification",
        "description": "Verify the pin with the token generated by the server",
        "operationId": "verifyDomainRegistrationPin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerificationReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        }
      }
    },
    "/IoT/registration/password/reset": {
      "post": {
        "tags": [
          "IoT"
        ],
        "summary": "Reset password",
        "description": "Reset initial password",
        "operationId": "resetDomainRegistrationPassword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        }
      }
    },
    "/IoT/user/register": {
      "post": {
        "tags": [
          "IoT"
        ],
        "summary": "Do User Registration",
        "description": "Register new user to a domain",
        "operationId": "registerNewUser",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "testMode",
            "in": "header",
            "type": "boolean",
            "required": false
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRegistration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegistrationRes"
            }
          }
        }
      }
    },
    "/IoT/user/registration/verify": {
      "post": {
        "tags": [
          "IoT"
        ],
        "summary": "Do User Registration Verification",
        "description": "Verify the pin with the token generated by the server",
        "operationId": "verifyNewUserRegistrationPin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerificationReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        }
      }
    },
    "/IoT/user/registration/password/reset": {
      "post": {
        "tags": [
          "IoT"
        ],
        "summary": "Reset newly registered user password",
        "description": "Reset newly registered user password",
        "operationId": "resetNewUserPassword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        }
      }
    },
    "/IoT/forgot/password": {
      "post": {
        "tags": [
          "IoT"
        ],
        "summary": "Forgot password",
        "description": "Geneate forgot password email | sms",
        "operationId": "forgotPassword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "testMode",
            "in": "header",
            "type": "boolean",
            "required": false
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ForgotPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegistrationRes"
            }
          }
        }
      }
    },
    "/IoT/forgot/password/verify": {
      "post": {
        "tags": [
          "IoT"
        ],
        "summary": "Do Verification",
        "description": "Verify the pin with the token generated by the server",
        "operationId": "verifyForgotPasswordPin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerificationReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        }
      }
    },
    "/IoT/forgot/password/reset": {
      "post": {
        "tags": [
          "IoT"
        ],
        "summary": "Reset forgot password",
        "description": "Reset forgotten password",
        "operationId": "resetForgotPassword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        }
      }
    },
    "/IoT/password/change": {
      "post": {
        "tags": [
          "IoT"
        ],
        "summary": "Change password",
        "description": "Change current password",
        "operationId": "changeCurrentPassword",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/IoT/unregister": {
      "post": {
        "tags": [
          "IoT"
        ],
        "summary": "Unregister account",
        "description": "Unregister account",
        "operationId": "unregisterAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnregisterAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/IoT/twin/sys/info/upsert": {
      "post": {
        "tags": [
          "IoT"
        ],
        "summary": "Create or update configuration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "upsertTwinSysInfo",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TwinSysInfoBase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TwinSysInfoEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/IoT/twin/sys/info/get": {
      "get": {
        "tags": [
          "IoT"
        ],
        "summary": "Get Twin system information along with other settings",
        "description": "Get Twin system information",
        "operationId": "getTwinSysInfo",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TwinSysInfoEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/IoT/twin/tags/get/{entityType}": {
      "get": {
        "tags": [
          "IoT"
        ],
        "summary": "Get tag list of an entity type",
        "description": "Get tag list of an entity type",
        "operationId": "getTags",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "entityType",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "DEVICEDATA",
              "DEVICEVIEW",
              "DASHBOARDSCREEN",
              "DASHBOARDMENU",
              "EVENTREGISTRATION",
              "DEVICEMODEL",
              "DEVICE",
              "CONDITION",
              "ALARM",
              "DISPLAY",
              "CONTROL",
              "DISPLAYWIDGET",
              "SREENWIDGET",
              "EVENT",
              "TRIGGER",
              "PREPROCESSOR",
              "DATAFILTER",
              "GEOFENCE",
              "ANALYTICSSCREEN",
              "ROLE",
              "FLOOR",
              "ASSET",
              "FACILITY",
              "PREMISE",
              "SETTINGS"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TagsRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/IoT/query/generic": {
      "post": {
        "tags": [
          "IoT"
        ],
        "summary": "Query using EQL",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryGeneric",
        "parameters": [
          {
            "in": "body",
            "name": "eql",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/IoT/domain/update": {
      "post": {
        "tags": [
          "IoT"
        ],
        "summary": "Update domain",
        "operationId": "updateDomain",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DomainInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/IoT/domain/change/email": {
      "post": {
        "tags": [
          "IoT"
        ],
        "summary": "Change domain email",
        "operationId": "changeDomainEmail",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "testMode",
            "in": "header",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangeEmail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/RegistrationRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/IoT/domain/change/email/verify": {
      "post": {
        "tags": [
          "IoT"
        ],
        "summary": "Verify domain email change",
        "operationId": "verifyChangeDomainEmailPin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VerificationReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/IoT/domain/factory/reset": {
      "delete": {
        "tags": [
          "IoT"
        ],
        "summary": "Factory Reset",
        "description": "Factory Reset",
        "operationId": "factoryReset",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/IoT/domain/clear/entities": {
      "delete": {
        "tags": [
          "IoT"
        ],
        "description": "Cleanup all custom entity data",
        "summary": "Cleanup all custom entity data",
        "operationId": "cleanupEntityData",
        "parameters": [
          {
            "in": "header",
            "name": "dropIndexes",
            "required": false,
            "type": "boolean",
            "description": "drop the entire data tables and recreate them"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/IoT/clear/data": {
      "delete": {
        "tags": [
          "IoT"
        ],
        "summary": "Cleanup all device data",
        "description": "Cleanup all device data",
        "operationId": "cleanupDeviceData",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "dropIndexes",
            "required": false,
            "type": "boolean",
            "description": "drop the entire data tables and recreate them"
          },
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string",
            "description": "provide this to delete only the data belongs to this model"
          },
          {
            "in": "header",
            "name": "deviceId",
            "required": false,
            "type": "string",
            "description": "provide this to delete only the data belongs to this device"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/IoT/domain/close": {
      "delete": {
        "tags": [
          "IoT"
        ],
        "summary": "Close Account",
        "description": "Close Account",
        "operationId": "closeAccount",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceData/get/{deviceId}": {
      "get": {
        "tags": [
          "Device Data"
        ],
        "summary": "Get the most recent data for this device",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getDeviceData",
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "isHardwareDevice",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceDataEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceData/recent": {
      "post": {
        "tags": [
          "Device Data"
        ],
        "summary": "Search recent device data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchRecentDeviceData",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "premiseId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "facilityId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "floorId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "assetId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "filterByLocation",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilterSearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceDataArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceData/history/search": {
      "post": {
        "tags": [
          "Device Data"
        ],
        "summary": "Search device history data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchDeviceHistoryData",
        "parameters": [
          {
            "in": "header",
            "name": "deviceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "premiseId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "facilityId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "floorId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "assetId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "filterByLocation",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilterSearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceDataArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceData/history/remove/{recordId}": {
      "delete": {
        "tags": [
          "Device Data"
        ],
        "summary": "Remove history data record",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "removeHistoryDataRecord",
        "parameters": [
          {
            "in": "path",
            "name": "recordId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceDataEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceData/send": {
      "post": {
        "tags": [
          "Device Data"
        ],
        "summary": "Send device data",
        "description": "The apiKey for this call should be the apiKey of the reporting device",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "sendDeviceData",
        "parameters": [
          {
            "in": "header",
            "name": "hardwareDeviceId",
            "required": true,
            "description": "hardware device id",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceData/location/send/{lon}/{lat}": {
      "post": {
        "tags": [
          "Device Data"
        ],
        "summary": "Send device data",
        "description": "The apiKey for this call should be the apiKey of the reporting device",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "sendDeviceLocationData",
        "parameters": [
          {
            "in": "header",
            "name": "hardwareDeviceId",
            "required": true,
            "description": "hardware device id",
            "type": "string"
          },
          {
            "in": "header",
            "name": "geocode",
            "required": false,
            "description": "do reverse geocoding",
            "type": "boolean"
          },
          {
            "in": "path",
            "name": "lon",
            "required": true,
            "description": "longitude",
            "type": "number",
            "format": "double"
          },
          {
            "in": "path",
            "name": "lat",
            "required": true,
            "description": "latitide",
            "type": "number",
            "format": "double"
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceData/triggered/events/search": {
      "post": {
        "tags": [
          "Device Data"
        ],
        "summary": "Search triggered events",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "seearchTriggeredEvents",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "deviceId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "userId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "assetId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "premiseId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "facilityId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "floorId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilterSearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TriggeredEventArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceData/triggered/controls/search": {
      "post": {
        "tags": [
          "Device Data"
        ],
        "summary": "Search triggered controls",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "seearchTriggeredControls",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "deviceId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FilterSearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TriggeredControlArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceData/trends/{deviceId}/{field}": {
      "get": {
        "tags": [
          "Device Data"
        ],
        "description": "Device triends data",
        "operationId": "getDeviceTrends",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "field",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "filter",
            "required": false,
            "type": "string",
            "enum": [
              "RECENT",
              "TODAY",
              "YESTERDAY",
              "THISWEEK",
              "LASTWEEK",
              "THISMONTH",
              "LASTMONTH",
              "THISQUARTER",
              "THISYEAR",
              "LASTYEAR",
              "RANGE"
            ]
          },
          {
            "in": "header",
            "name": "interval",
            "required": false,
            "type": "string",
            "enum": [
              "SECOND",
              "MINUTE",
              "HOUR",
              "DAY",
              "WEEK",
              "MONTH",
              "YEAR"
            ]
          },
          {
            "in": "header",
            "name": "beginStamp",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "required if filter is set"
          },
          {
            "in": "header",
            "name": "endStamp",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "required if filter is set"
          },
          {
            "in": "header",
            "name": "tz",
            "required": false,
            "type": "string",
            "default": "GMT",
            "description": "Timezone"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TrendValueArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Cleanup entire data"
      }
    },
    "/DeviceData/series/{deviceId}/{field}/{page}/{size}": {
      "get": {
        "tags": [
          "Device Data"
        ],
        "description": "Device time series data",
        "operationId": "getDeviceTimeSeries",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "field",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "page",
            "required": true,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "size",
            "required": true,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "filter",
            "required": false,
            "type": "string",
            "enum": [
              "RECENT",
              "TODAY",
              "YESTERDAY",
              "THISWEEK",
              "LASTWEEK",
              "THISMONTH",
              "LASTMONTH",
              "THISQUARTER",
              "THISYEAR",
              "LASTYEAR",
              "RANGE"
            ]
          },
          {
            "in": "header",
            "name": "beginStamp",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "required if filter is set"
          },
          {
            "in": "header",
            "name": "endStamp",
            "required": false,
            "type": "integer",
            "format": "int64",
            "description": "required if filter is set"
          },
          {
            "in": "header",
            "name": "tz",
            "required": false,
            "type": "string",
            "default": "GMT",
            "description": "Timezone"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TimeSeriesValueArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "Cleanup entire data"
      }
    },
    "/DeviceData/filter/{filterId}": {
      "get": {
        "tags": [
          "Device Data"
        ],
        "summary": "Filter recent device data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "filterRecentDeviceData",
        "parameters": [
          {
            "in": "header",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "filterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceDataArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceData/reported/assets/{size}": {
      "get": {
        "tags": [
          "Device Data"
        ],
        "summary": "Get reported asset ids",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getReportedAssetIds",
        "parameters": [
          {
            "in": "path",
            "name": "size",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/IDListEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceData/search/reported/assets": {
      "post": {
        "tags": [
          "Device Data"
        ],
        "summary": "Search reported assets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchReportedAssets",
        "parameters": [
          {
            "in": "body",
            "name": "search",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/IDListEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceData/field/filter/{fieldFilterId}": {
      "get": {
        "tags": [
          "Device Data"
        ],
        "summary": "Field filter recent device data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "fieldFilterRecentDeviceData",
        "parameters": [
          {
            "in": "header",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "fieldFilterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceDataArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceData/query": {
      "post": {
        "tags": [
          "Device Data"
        ],
        "description": "query device data",
        "operationId": "queryDeviceData",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "query data"
      }
    },
    "/DeviceData/history/query": {
      "post": {
        "tags": [
          "Device Data"
        ],
        "description": "query device history data",
        "operationId": "queryDeviceHistoryData",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "query history data"
      }
    },
    "/DeviceData/alarm/filter/{alarmId}": {
      "get": {
        "tags": [
          "Device Data"
        ],
        "summary": "Field filter recent device data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "alarmFilterRecentDeviceData",
        "parameters": [
          {
            "in": "header",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "alarmId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceDataArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceData/event/filter/{eventId}": {
      "get": {
        "tags": [
          "Device Data"
        ],
        "summary": "Field filter recent device data",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "eventFilterRecentDeviceData",
        "parameters": [
          {
            "in": "header",
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "in": "header",
            "name": "size",
            "required": false,
            "type": "integer"
          },
          {
            "in": "path",
            "name": "eventId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceDataArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceData/reprocess": {
      "post": {
        "tags": [
          "Device Data"
        ],
        "description": "reprocess device data",
        "operationId": "reprocessDeviceData",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReprocessInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "reprocess device data"
      }
    },
    "/DeviceData/list/nonreporting": {
      "post": {
        "tags": [
          "Device Data"
        ],
        "description": "list non reporting",
        "summary": "list non reporting",
        "operationId": "listNonReporting",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NonReportingReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceDataArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceData/query/reported/assets": {
      "post": {
        "tags": [
          "Device Data"
        ],
        "summary": "Search reported assets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "quryReportedAssets",
        "parameters": [
          {
            "in": "body",
            "name": "search",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceView/create": {
      "post": {
        "tags": [
          "Device View"
        ],
        "summary": "Create device view",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createDeviceView",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceViewInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceViewEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceView/update": {
      "post": {
        "tags": [
          "Device View"
        ],
        "summary": "Update device view",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateDeviceView",
        "parameters": [
          {
            "in": "header",
            "name": "deviceViewId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceViewInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceViewEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceView/remove": {
      "delete": {
        "tags": [
          "Device View"
        ],
        "summary": "Delete device view",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteDeviceView",
        "parameters": [
          {
            "in": "header",
            "name": "deviceViewId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceViewEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceView/list": {
      "post": {
        "tags": [
          "Device View"
        ],
        "summary": "List device views",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listDeviceViews",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceViewArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceView/search": {
      "post": {
        "tags": [
          "Device View"
        ],
        "summary": "Search device views",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchDeviceViews",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceViewArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceView/get": {
      "post": {
        "tags": [
          "Device View"
        ],
        "summary": "Get device views",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getDeviceViews",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceViewArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceView/one/{deviceViewId}": {
      "get": {
        "tags": [
          "Device View"
        ],
        "summary": "get device view by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getDeviceView",
        "parameters": [
          {
            "in": "path",
            "name": "deviceViewId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceViewEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceView/query": {
      "post": {
        "tags": [
          "Device View"
        ],
        "summary": "Search device views",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryDeviceViews",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DashboardScreen/create": {
      "post": {
        "tags": [
          "Dashboard Screen"
        ],
        "summary": "Create dashboard screen",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createDashboardScreen",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DashboardScreenInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DashboardScreenEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DashboardScreen/update": {
      "post": {
        "tags": [
          "Dashboard Screen"
        ],
        "summary": "Update dashboard screen",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateDashboardScreen",
        "parameters": [
          {
            "in": "header",
            "name": "screenId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DashboardScreenInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DashboardScreenEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DashboardScreen/remove": {
      "delete": {
        "tags": [
          "Dashboard Screen"
        ],
        "summary": "Delete dashboard screen",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteDashboardScreen",
        "parameters": [
          {
            "in": "header",
            "name": "screenId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DashboardScreenEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DashboardScreen/list": {
      "post": {
        "tags": [
          "Dashboard Screen"
        ],
        "summary": "List dashboard screens",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listDashboardScreens",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DashboardScreenArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DashboardScreen/search": {
      "post": {
        "tags": [
          "Dashboard Screen"
        ],
        "summary": "Search dashboard screens",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchDashboardScreens",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DashboardScreenArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DashboardScreen/get": {
      "post": {
        "tags": [
          "Dashboard Screen"
        ],
        "summary": "Get dashboard screens",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getDashboardScreens",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DashboardScreenArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DashboardScreen/one/{screenId}": {
      "get": {
        "tags": [
          "Dashboard Screen"
        ],
        "summary": "get dashboard screen by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getDashboardScreen",
        "parameters": [
          {
            "in": "path",
            "name": "screenId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DashboardScreenEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DashboardScreen/count": {
      "get": {
        "tags": [
          "Dashboard Screen"
        ],
        "description": "count",
        "summary": "count",
        "operationId": "countDashboards",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CountRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DashboardScreen/query": {
      "post": {
        "tags": [
          "Dashboard Screen"
        ],
        "summary": "Search dashboard screens",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryDashboardScreens",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DashboardMenu/create": {
      "post": {
        "tags": [
          "Dashboard Menu"
        ],
        "summary": "Create dashboard menu",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createDashboardMenuGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DashboardMenuGroupInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DashboardMenuGroupEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DashboardMenu/update": {
      "post": {
        "tags": [
          "Dashboard Menu"
        ],
        "summary": "Update dashboard menu",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateDashboardMenuGroup",
        "parameters": [
          {
            "in": "header",
            "name": "menuGroupId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DashboardMenuGroupInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DashboardMenuGroupEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DashboardMenu/remove": {
      "delete": {
        "tags": [
          "Dashboard Menu"
        ],
        "summary": "Delete dashboard menu",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteDashboardMenuGroup",
        "parameters": [
          {
            "in": "header",
            "name": "menuGroupId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DashboardMenuGroupEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DashboardMenu/list": {
      "post": {
        "tags": [
          "Dashboard Menu"
        ],
        "summary": "List dashboard menus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listDashboardMenuGroups",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DashboardMenuGroupArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DashboardMenu/search": {
      "post": {
        "tags": [
          "Dashboard Menu"
        ],
        "summary": "Search dashboard menus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchDashboardMenuGroups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DashboardMenuGroupArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DashboardMenu/get": {
      "post": {
        "tags": [
          "Dashboard Menu"
        ],
        "summary": "Get dashboard menus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getDashboardMenuGroups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DashboardMenuGroupArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DashboardMenu/one/{menuGroupId}": {
      "get": {
        "tags": [
          "Dashboard Menu"
        ],
        "summary": "get dashboard menu by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getDashboardMenuGroup",
        "parameters": [
          {
            "in": "path",
            "name": "menuGroupId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DashboardMenuGroupEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DashboardMenu/query": {
      "post": {
        "tags": [
          "Dashboard Menu"
        ],
        "summary": "Search dashboard menus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryDashboardMenuGroups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/EventRegistration/create": {
      "post": {
        "tags": [
          "Event Registration"
        ],
        "summary": "Create event registration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createEventRegistration",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventRegistrationInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/EventRegistrationEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/EventRegistration/update": {
      "post": {
        "tags": [
          "Event Registration"
        ],
        "summary": "Update event registration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateEventRegistration",
        "parameters": [
          {
            "in": "header",
            "name": "eventRegistrationId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventRegistrationInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/EventRegistrationEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/EventRegistration/remove": {
      "delete": {
        "tags": [
          "Event Registration"
        ],
        "summary": "Delete event registration",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteEventRegistration",
        "parameters": [
          {
            "in": "header",
            "name": "eventRegistrationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/EventRegistrationEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/EventRegistration/list": {
      "post": {
        "tags": [
          "Event Registration"
        ],
        "summary": "List event registrations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listEventRegistrations",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/EventRegistrationArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceModel/create": {
      "post": {
        "tags": [
          "Device Model"
        ],
        "summary": "Create device model",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createDeviceModel",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceModelInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceModelEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceModel/update": {
      "post": {
        "tags": [
          "Device Model"
        ],
        "summary": "Update device model",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateDeviceModel",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceModelInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceModelEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceModel/remove": {
      "delete": {
        "tags": [
          "Device Model"
        ],
        "summary": "Delete device model",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteDeviceModel",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceModelEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceModel/list": {
      "post": {
        "tags": [
          "Device Model"
        ],
        "summary": "List device models",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listDeviceModels",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceModelArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceModel/search": {
      "post": {
        "tags": [
          "Device Model"
        ],
        "summary": "Search device models",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchDeviceModels",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceModelArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceModel/get": {
      "post": {
        "tags": [
          "Device Model"
        ],
        "summary": "get device models by list of id's",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getDeviceModels",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceModelArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceModel/one/{modelId}": {
      "get": {
        "tags": [
          "Device Model"
        ],
        "summary": "get device models by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getDeviceModel",
        "parameters": [
          {
            "in": "path",
            "name": "modelId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceModelEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceModel/export/{modelId}": {
      "get": {
        "tags": [
          "Device Model"
        ],
        "summary": "export device model",
        "description": "export device model",
        "operationId": "exportDeviceModel",
        "parameters": [
          {
            "name": "modelId",
            "in": "path",
            "description": "device model id",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "file"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceModel/import": {
      "post": {
        "tags": [
          "Device Model"
        ],
        "summary": "import device model exported data",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "description": "import device model",
        "operationId": "importDeviceModel",
        "parameters": [
          {
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceModel/param/list": {
      "get": {
        "tags": [
          "Device Model"
        ],
        "summary": "list all device model's parameters",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listAllParameters",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ParameterArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceModel/count": {
      "get": {
        "tags": [
          "Device Model"
        ],
        "description": "count",
        "summary": "count",
        "operationId": "countDeviceModels",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CountRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceModel/param/units": {
      "get": {
        "tags": [
          "Device Model"
        ],
        "description": "get prameter units",
        "summary": "get parameter units",
        "operationId": "getParameterUnits",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ParameterUnitsEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DeviceModel/query": {
      "post": {
        "tags": [
          "Device Model"
        ],
        "summary": "Search device models",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryDeviceModels",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Device/create": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Create device",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createDevice",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Device/update": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Update device",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateDevice",
        "parameters": [
          {
            "in": "header",
            "name": "deviceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Device/remove": {
      "delete": {
        "tags": [
          "Device"
        ],
        "summary": "Delete device",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteDevice",
        "parameters": [
          {
            "in": "header",
            "name": "deviceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Device/list": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "List devices",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listDevices",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Device/search": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Search devices",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchDevices",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "assetId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "floorId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "facilityId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "premiseId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Device/get": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "get devices",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getDevices",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Device/one/{deviceId}": {
      "get": {
        "tags": [
          "Device"
        ],
        "summary": "get device by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getDevice",
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "isHardwareDevice",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Device/reset_key": {
      "put": {
        "tags": [
          "Device"
        ],
        "summary": "Reset API key of a device",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "resetDeviceApiKey",
        "parameters": [
          {
            "in": "header",
            "name": "deviceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "apiKey",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DeviceEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Device/count": {
      "get": {
        "tags": [
          "Device"
        ],
        "description": "count",
        "summary": "count",
        "operationId": "countDevices",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CountRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Device/query": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Search devices",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryDevices",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Condition/create": {
      "post": {
        "tags": [
          "Condition"
        ],
        "summary": "Create condition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createCondition",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConditionInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ConditionEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Condition/update": {
      "post": {
        "tags": [
          "Condition"
        ],
        "summary": "Update condition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateCondition",
        "parameters": [
          {
            "in": "header",
            "name": "conditionId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConditionInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ConditionEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Condition/remove": {
      "delete": {
        "tags": [
          "Condition"
        ],
        "summary": "Delete condition",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteCondition",
        "parameters": [
          {
            "in": "header",
            "name": "conditionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ConditionEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Condition/list": {
      "post": {
        "tags": [
          "Condition"
        ],
        "summary": "List conditions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listConditions",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ConditionArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Condition/search": {
      "post": {
        "tags": [
          "Condition"
        ],
        "summary": "Search conditions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchConditions",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ConditionArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Condition/get": {
      "post": {
        "tags": [
          "Condition"
        ],
        "summary": "Get conditions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getConditions",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ConditionArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Condition/one/{conditionId}": {
      "get": {
        "tags": [
          "Condition"
        ],
        "summary": "get condition by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getCondition",
        "parameters": [
          {
            "in": "path",
            "name": "conditionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ConditionEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Condition/query": {
      "post": {
        "tags": [
          "Condition"
        ],
        "summary": "Search conditions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryConditions",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Alarm/create": {
      "post": {
        "tags": [
          "Alarm"
        ],
        "summary": "Create alarm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createAlarm",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlarmInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AlarmEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Alarm/update": {
      "post": {
        "tags": [
          "Alarm"
        ],
        "summary": "Update alarm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateAlarm",
        "parameters": [
          {
            "in": "header",
            "name": "alarmId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AlarmInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AlarmEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Alarm/remove": {
      "delete": {
        "tags": [
          "Alarm"
        ],
        "summary": "Delete alarm",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteAlarm",
        "parameters": [
          {
            "in": "header",
            "name": "alarmId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AlarmEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Alarm/list": {
      "post": {
        "tags": [
          "Alarm"
        ],
        "summary": "List alarms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listAlarms",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "deviceId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AlarmArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Alarm/search": {
      "post": {
        "tags": [
          "Alarm"
        ],
        "summary": "Search alarms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchAlarms",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "deviceId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AlarmArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Alarm/get": {
      "post": {
        "tags": [
          "Alarm"
        ],
        "summary": "Get alarms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getAlarms",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AlarmArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Alarm/one/{alarmId}": {
      "get": {
        "tags": [
          "Alarm"
        ],
        "summary": "get alarm by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getAlarm",
        "parameters": [
          {
            "in": "path",
            "name": "alarmId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AlarmEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Alarm/query": {
      "post": {
        "tags": [
          "Alarm"
        ],
        "summary": "Search alarms",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryAlarms",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Display/create": {
      "post": {
        "tags": [
          "Display"
        ],
        "summary": "Create display",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createDisplay",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisplayInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DisplayEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Display/update": {
      "post": {
        "tags": [
          "Display"
        ],
        "summary": "Update display",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateDisplay",
        "parameters": [
          {
            "in": "header",
            "name": "displayId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisplayInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DisplayEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Display/remove": {
      "delete": {
        "tags": [
          "Display"
        ],
        "summary": "Delete display",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteDisplay",
        "parameters": [
          {
            "in": "header",
            "name": "displayId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DisplayEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Display/list": {
      "post": {
        "tags": [
          "Display"
        ],
        "summary": "List displays",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listDisplays",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "deviceId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DisplayArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Display/search": {
      "post": {
        "tags": [
          "Display"
        ],
        "summary": "Search displays",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchDisplays",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "deviceId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DisplayArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Display/get": {
      "post": {
        "tags": [
          "Display"
        ],
        "summary": "Get displays",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getDisplays",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DisplayArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Display/one/{displayId}": {
      "get": {
        "tags": [
          "Display"
        ],
        "summary": "get display by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getDisplay",
        "parameters": [
          {
            "in": "path",
            "name": "displayId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DisplayEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Display/query": {
      "post": {
        "tags": [
          "Display"
        ],
        "summary": "Search displays",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryDisplays",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Control/create": {
      "post": {
        "tags": [
          "Control"
        ],
        "summary": "Create control",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createControl",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ControlInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ControlEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Control/update": {
      "post": {
        "tags": [
          "Control"
        ],
        "summary": "Update control",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateControl",
        "parameters": [
          {
            "in": "header",
            "name": "controlId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ControlInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ControlEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Control/remove": {
      "delete": {
        "tags": [
          "Control"
        ],
        "summary": "Delete control",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteControl",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "controlId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ControlEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Control/list": {
      "post": {
        "tags": [
          "Control"
        ],
        "summary": "List controls",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listControls",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ControlArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Control/search": {
      "post": {
        "tags": [
          "Control"
        ],
        "summary": "Search controls",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchControls",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ControlArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Control/get": {
      "post": {
        "tags": [
          "Control"
        ],
        "summary": "Get controls",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getControls",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ControlArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Control/one/{controlId}": {
      "get": {
        "tags": [
          "Control"
        ],
        "summary": "get control by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getControl",
        "parameters": [
          {
            "in": "path",
            "name": "controlId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ControlEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Control/fire": {
      "post": {
        "tags": [
          "Control"
        ],
        "summary": "Fire control",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "fireControl",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FireReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ControlEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Control/set/state/{deviceId}/{controlId}/{state}": {
      "get": {
        "tags": [
          "Control"
        ],
        "summary": "set control state",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "setControlState",
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "controlId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "state",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ControlEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Control/query": {
      "post": {
        "tags": [
          "Control"
        ],
        "summary": "Search controls",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryControls",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DisplayWidget/create": {
      "post": {
        "tags": [
          "Display Widget"
        ],
        "summary": "Create display widget",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createDisplayWidget",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisplayWidgetInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DisplayWidgetEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DisplayWidget/update": {
      "post": {
        "tags": [
          "Display Widget"
        ],
        "summary": "Update display widget",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateDisplayWidget",
        "parameters": [
          {
            "in": "header",
            "name": "displayWidgetId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DisplayWidgetInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DisplayWidgetEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DisplayWidget/remove": {
      "delete": {
        "tags": [
          "Display Widget"
        ],
        "summary": "Delete display widget",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteDisplayWidget",
        "parameters": [
          {
            "in": "header",
            "name": "displayWidgetId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DisplayWidgetEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DisplayWidget/list": {
      "post": {
        "tags": [
          "Display Widget"
        ],
        "summary": "List display widgets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listDisplayWidgets",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DisplayWidgetArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DisplayWidget/search": {
      "post": {
        "tags": [
          "Display Widget"
        ],
        "summary": "Search display widgets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchDisplayWidgets",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DisplayWidgetArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DisplayWidget/get": {
      "post": {
        "tags": [
          "Display Widget"
        ],
        "summary": "Get display widgets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getDisplayWidgets",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DisplayWidgetArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DisplayWidget/one/{displayWidgetId}": {
      "get": {
        "tags": [
          "Display Widget"
        ],
        "summary": "get display widget by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getDisplayWidget",
        "parameters": [
          {
            "in": "path",
            "name": "displayWidgetId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DisplayWidgetEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DisplayWidget/query": {
      "post": {
        "tags": [
          "Display Widget"
        ],
        "summary": "Search display widgets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryDisplayWidgets",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/ScreenWidget/create": {
      "post": {
        "tags": [
          "Screen Widget"
        ],
        "summary": "Create screen widget",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createScreenWidget",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScreenWidgetInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ScreenWidgetEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/ScreenWidget/update": {
      "post": {
        "tags": [
          "Screen Widget"
        ],
        "summary": "Update screen widget",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateScreenWidget",
        "parameters": [
          {
            "in": "header",
            "name": "screenWidgetId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScreenWidgetInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ScreenWidgetEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/ScreenWidget/remove": {
      "delete": {
        "tags": [
          "Screen Widget"
        ],
        "summary": "Delete screen widget",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteScreenWidget",
        "parameters": [
          {
            "in": "header",
            "name": "screenWidgetId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ScreenWidgetEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/ScreenWidget/list/{target}": {
      "post": {
        "tags": [
          "Screen Widget"
        ],
        "summary": "List screen widgets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listScreenWidgets",
        "parameters": [
          {
            "in": "path",
            "name": "target",
            "required": true,
            "type": "string",
            "enum": [
              "SCREEN",
              "ANALYTICS"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ScreenWidgetArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/ScreenWidget/search/{target}": {
      "post": {
        "tags": [
          "Screen Widget"
        ],
        "summary": "Search screen widgets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchScreenWidgets",
        "parameters": [
          {
            "in": "path",
            "name": "target",
            "required": true,
            "type": "string",
            "enum": [
              "SCREEN",
              "ANALYTICS"
            ]
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ScreenWidgetArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/ScreenWidget/get": {
      "post": {
        "tags": [
          "Screen Widget"
        ],
        "summary": "Get screen widgets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getScreenWidgets",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ScreenWidgetArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/ScreenWidget/one/{screenWidgetId}": {
      "get": {
        "tags": [
          "Screen Widget"
        ],
        "summary": "get screen widget by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getScreenWidget",
        "parameters": [
          {
            "in": "path",
            "name": "screenWidgetId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ScreenWidgetEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/ScreenWidget/query": {
      "post": {
        "tags": [
          "Screen Widget"
        ],
        "summary": "Search screen widgets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryScreenWidgets",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Event/create": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Create event",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createEvent",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/EventEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Event/update": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Update event",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateEvent",
        "parameters": [
          {
            "in": "header",
            "name": "eventId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/EventEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Event/remove": {
      "delete": {
        "tags": [
          "Event"
        ],
        "summary": "Delete event",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteEvent",
        "parameters": [
          {
            "in": "header",
            "name": "eventId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/EventEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Event/list": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "List events",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listEvents",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "deviceId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/EventArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Event/search": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Search events",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchEvents",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "deviceId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/EventArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Event/query": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Search events",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryEvents",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Event/get": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Get events",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getEvents",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/EventArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Event/one/{eventId}": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "get event by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getEvent",
        "parameters": [
          {
            "in": "path",
            "name": "eventId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/EventEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Event/search/triggered": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Search triggered events",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchTriggeredEvents",
        "parameters": [
          {
            "in": "header",
            "name": "eventId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "userId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "deviceId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "assetId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "premiseId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "facilityId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "floorId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TriggeredEventArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Event/query/triggered": {
      "post": {
        "tags": [
          "Event"
        ],
        "summary": "Search triggered events",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryTriggeredEvents",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Trigger/create": {
      "post": {
        "tags": [
          "Trigger"
        ],
        "summary": "Create trigger",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createTrigger",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TriggerInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TriggerEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Trigger/update": {
      "post": {
        "tags": [
          "Trigger"
        ],
        "summary": "Update trigger",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateTrigger",
        "parameters": [
          {
            "in": "header",
            "name": "triggerId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TriggerInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TriggerEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Trigger/remove": {
      "delete": {
        "tags": [
          "Trigger"
        ],
        "summary": "Delete trigger",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteTrigger",
        "parameters": [
          {
            "in": "header",
            "name": "triggerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TriggerEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Trigger/list": {
      "post": {
        "tags": [
          "Trigger"
        ],
        "summary": "List triggers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listTrigger",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TriggerArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Trigger/search": {
      "post": {
        "tags": [
          "Trigger"
        ],
        "summary": "Search triggers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchTriggers",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TriggerArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Trigger/get": {
      "post": {
        "tags": [
          "Trigger"
        ],
        "summary": "Get triggers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getTriggers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TriggerArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Trigger/one/{triggerId}": {
      "get": {
        "tags": [
          "Trigger"
        ],
        "summary": "get trigger by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getTrigger",
        "parameters": [
          {
            "in": "path",
            "name": "triggerId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TriggerEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Trigger/query": {
      "post": {
        "tags": [
          "Trigger"
        ],
        "summary": "Search triggers",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryTriggers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Preprocessor/create": {
      "post": {
        "tags": [
          "Preprocessor"
        ],
        "summary": "Create preprocessor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createPreprocessor",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PreprocessorInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PreprocessorEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Preprocessor/update": {
      "post": {
        "tags": [
          "Preprocessor"
        ],
        "summary": "Update preprocessor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updatePreprocessor",
        "parameters": [
          {
            "in": "header",
            "name": "preprocessorId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PreprocessorInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PreprocessorEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Preprocessor/remove": {
      "delete": {
        "tags": [
          "Preprocessor"
        ],
        "summary": "Delete preprocessor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deletePreprocessor",
        "parameters": [
          {
            "in": "header",
            "name": "preprocessorId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PreprocessorEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Preprocessor/list": {
      "post": {
        "tags": [
          "Preprocessor"
        ],
        "summary": "List preprocessors",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listPreprocessors",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PreprocessorArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Preprocessor/search": {
      "post": {
        "tags": [
          "Preprocessor"
        ],
        "summary": "Search preprocessors",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchPreprocessors",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PreprocessorArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Preprocessor/get": {
      "post": {
        "tags": [
          "Preprocessor"
        ],
        "summary": "Get preprocessors",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getPreprocessors",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PreprocessorArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Preprocessor/one/{preprocessorId}": {
      "get": {
        "tags": [
          "Preprocessor"
        ],
        "summary": "get preprocessor by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getPreprocessor",
        "parameters": [
          {
            "in": "path",
            "name": "preprocessorId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PreprocessorEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Preprocessor/query": {
      "post": {
        "tags": [
          "Preprocessor"
        ],
        "summary": "Search preprocessors",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryPreprocessors",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DataFilter/create": {
      "post": {
        "tags": [
          "DataFilter"
        ],
        "summary": "Create dataFilter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createDataFilter",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataFilterInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DataFilterEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DataFilter/update": {
      "post": {
        "tags": [
          "DataFilter"
        ],
        "summary": "Update dataFilter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateDataFilter",
        "parameters": [
          {
            "in": "header",
            "name": "dataFilterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataFilterInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DataFilterEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DataFilter/remove": {
      "delete": {
        "tags": [
          "DataFilter"
        ],
        "summary": "Delete dataFilter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteDataFilter",
        "parameters": [
          {
            "in": "header",
            "name": "dataFilterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DataFilterEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DataFilter/list": {
      "post": {
        "tags": [
          "DataFilter"
        ],
        "summary": "List dataFilters",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listDataFilters",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "myFilters",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DataFilterArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DataFilter/search": {
      "post": {
        "tags": [
          "DataFilter"
        ],
        "summary": "Search dataFilters",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchDataFilters",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "myFilters",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DataFilterArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DataFilter/get": {
      "post": {
        "tags": [
          "DataFilter"
        ],
        "summary": "Get dataFilters",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getDataFilters",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DataFilterArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DataFilter/one/{dataFilterId}": {
      "get": {
        "tags": [
          "DataFilter"
        ],
        "summary": "get dataFilter by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getDataFilter",
        "parameters": [
          {
            "in": "path",
            "name": "dataFilterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/DataFilterEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/DataFilter/query": {
      "post": {
        "tags": [
          "DataFilter"
        ],
        "summary": "Search dataFilters",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryDataFilters",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/GeoFence/create": {
      "post": {
        "tags": [
          "GeoFence"
        ],
        "summary": "Create geoFence",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createGeoFence",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GeoFenceInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/GeoFenceEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/GeoFence/update": {
      "post": {
        "tags": [
          "GeoFence"
        ],
        "summary": "Update geoFence",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateGeoFence",
        "parameters": [
          {
            "in": "header",
            "name": "geoFenceId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GeoFenceInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/GeoFenceEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/GeoFence/remove": {
      "delete": {
        "tags": [
          "GeoFence"
        ],
        "summary": "Delete geoFence",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteGeoFence",
        "parameters": [
          {
            "in": "header",
            "name": "geoFenceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/GeoFenceEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/GeoFence/list": {
      "post": {
        "tags": [
          "GeoFence"
        ],
        "summary": "List geoFences",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listGeoFences",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/GeoFenceArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/GeoFence/search": {
      "post": {
        "tags": [
          "GeoFence"
        ],
        "summary": "Search geoFences",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchGeoFences",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/GeoFenceArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/GeoFence/get": {
      "post": {
        "tags": [
          "GeoFence"
        ],
        "summary": "Get geoFences",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getGeoFences",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/GeoFenceArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/GeoFence/one/{geoFenceId}": {
      "get": {
        "tags": [
          "GeoFence"
        ],
        "summary": "get geoFence by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getGeoFence",
        "parameters": [
          {
            "in": "path",
            "name": "geoFenceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/GeoFenceEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/GeoFence/query": {
      "post": {
        "tags": [
          "GeoFence"
        ],
        "summary": "Search geoFences",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryGeoFences",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/AnalyticsScreen/create": {
      "post": {
        "tags": [
          "AnalyticsScreen"
        ],
        "summary": "Create analytics screen",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createAnalyticsScreen",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsScreenInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AnalyticsScreenEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/AnalyticsScreen/update": {
      "post": {
        "tags": [
          "AnalyticsScreen"
        ],
        "summary": "Update analytics screen",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateAnalyticsScreen",
        "parameters": [
          {
            "in": "header",
            "name": "analyticsScreenId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AnalyticsScreenInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AnalyticsScreenEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/AnalyticsScreen/remove": {
      "delete": {
        "tags": [
          "AnalyticsScreen"
        ],
        "summary": "Delete analytics screen",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteAnalyticsScreen",
        "parameters": [
          {
            "in": "header",
            "name": "analyticsScreenId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AnalyticsScreenEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/AnalyticsScreen/list": {
      "post": {
        "tags": [
          "AnalyticsScreen"
        ],
        "summary": "List analytics screens",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listAnalyticsScreens",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AnalyticsScreenArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/AnalyticsScreen/search": {
      "post": {
        "tags": [
          "AnalyticsScreen"
        ],
        "summary": "Search analytics screens",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchAnalyticsScreens",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AnalyticsScreenArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/AnalyticsScreen/get": {
      "post": {
        "tags": [
          "AnalyticsScreen"
        ],
        "summary": "Get analytics screens",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getAnalyticsScreens",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AnalyticsScreenArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/AnalyticsScreen/one/{analyticsScreenId}": {
      "get": {
        "tags": [
          "AnalyticsScreen"
        ],
        "summary": "get analytics screen by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getAnalyticsScreen",
        "parameters": [
          {
            "in": "path",
            "name": "analyticsScreenId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AnalyticsScreenEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/AnalyticsScreen/query": {
      "post": {
        "tags": [
          "AnalyticsScreen"
        ],
        "summary": "Search analytics screens",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryAnalyticsScreens",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Role/create": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Create role",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createRole",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoleInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/RoleEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Role/update": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Update role",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateRole",
        "parameters": [
          {
            "in": "header",
            "name": "roleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RoleInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/RoleEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Role/remove": {
      "delete": {
        "tags": [
          "Role"
        ],
        "summary": "Delete role",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteRole",
        "parameters": [
          {
            "in": "header",
            "name": "roleId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/RoleEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Role/list": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "List roles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listRoles",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/RoleArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Role/search": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Search roles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchRoles",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/RoleArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Role/get": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Get roles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getRoles",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/RoleArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Role/one/{roleId}": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "get role by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getRole",
        "parameters": [
          {
            "in": "path",
            "name": "roleId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/RoleEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Role/query": {
      "post": {
        "tags": [
          "Role"
        ],
        "summary": "Search roles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryRoles",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Floor/create": {
      "post": {
        "tags": [
          "Floor"
        ],
        "summary": "Create floor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createFloor",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FloorInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FloorEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Floor/update": {
      "post": {
        "tags": [
          "Floor"
        ],
        "summary": "Update floor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateFloor",
        "parameters": [
          {
            "in": "header",
            "name": "floorId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FloorInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FloorEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Floor/remove": {
      "delete": {
        "tags": [
          "Floor"
        ],
        "summary": "Delete floor",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteFloor",
        "parameters": [
          {
            "in": "header",
            "name": "floorId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FloorEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Floor/list": {
      "post": {
        "tags": [
          "Floor"
        ],
        "summary": "List floors",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listFloors",
        "parameters": [
          {
            "in": "header",
            "name": "facilityId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FloorArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Floor/search": {
      "post": {
        "tags": [
          "Floor"
        ],
        "summary": "Search floors",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchFloors",
        "parameters": [
          {
            "in": "header",
            "name": "facilityId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "premiseId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FloorArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Floor/get": {
      "post": {
        "tags": [
          "Floor"
        ],
        "summary": "Get floors",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getFloors",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FloorArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Floor/one/{floorId}": {
      "get": {
        "tags": [
          "Floor"
        ],
        "summary": "get floor by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getFloor",
        "parameters": [
          {
            "in": "path",
            "name": "floorId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FloorEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Floor/stats/{floorId}": {
      "get": {
        "tags": [
          "Floor"
        ],
        "summary": "Get stats",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getFloorStats",
        "parameters": [
          {
            "in": "path",
            "name": "floorId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FloorStatsEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Floor/query": {
      "post": {
        "tags": [
          "Floor"
        ],
        "description": "query floor",
        "operationId": "queryFloors",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "query data"
      }
    },
    "/Asset/create": {
      "post": {
        "tags": [
          "Asset"
        ],
        "summary": "Create asset",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createAsset",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssetInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AssetEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Asset/update": {
      "post": {
        "tags": [
          "Asset"
        ],
        "summary": "Update asset",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateAsset",
        "parameters": [
          {
            "in": "header",
            "name": "assetId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssetInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AssetEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Asset/remove": {
      "delete": {
        "tags": [
          "Asset"
        ],
        "summary": "Delete asset",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteAsset",
        "parameters": [
          {
            "in": "header",
            "name": "assetId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AssetEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Asset/list": {
      "post": {
        "tags": [
          "Asset"
        ],
        "summary": "List assets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listAssets",
        "parameters": [
          {
            "in": "header",
            "name": "floorId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AssetArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Asset/search": {
      "post": {
        "tags": [
          "Asset"
        ],
        "summary": "Search assets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchAssets",
        "parameters": [
          {
            "in": "header",
            "name": "floorId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "facilityId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "premiseId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AssetArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Asset/get": {
      "post": {
        "tags": [
          "Asset"
        ],
        "summary": "Get assets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getAssets",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AssetArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Asset/one/{assetId}": {
      "get": {
        "tags": [
          "Asset"
        ],
        "summary": "get asset by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getAsset",
        "parameters": [
          {
            "in": "path",
            "name": "assetId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AssetEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Asset/query": {
      "post": {
        "tags": [
          "Asset"
        ],
        "summary": "Search assets",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryAssets",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Facility/create": {
      "post": {
        "tags": [
          "Facility"
        ],
        "summary": "Create facility",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createFacility",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FacilityInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FacilityEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Facility/update": {
      "post": {
        "tags": [
          "Facility"
        ],
        "summary": "Update facility",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateFacility",
        "parameters": [
          {
            "in": "header",
            "name": "facilityId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FacilityInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FacilityEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Facility/remove": {
      "delete": {
        "tags": [
          "Facility"
        ],
        "summary": "Delete facility",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteFacility",
        "parameters": [
          {
            "in": "header",
            "name": "facilityId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FacilityEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Facility/list": {
      "post": {
        "tags": [
          "Facility"
        ],
        "summary": "List facilitys",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listFacilities",
        "parameters": [
          {
            "in": "header",
            "name": "premiseId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FacilityArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Facility/search": {
      "post": {
        "tags": [
          "Facility"
        ],
        "summary": "Search facilitys",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchFacilities",
        "parameters": [
          {
            "in": "header",
            "name": "premiseId",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FacilityArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Facility/get": {
      "post": {
        "tags": [
          "Facility"
        ],
        "summary": "Get facilitys",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getFacilities",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FacilityArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Facility/one/{facilityId}": {
      "get": {
        "tags": [
          "Facility"
        ],
        "summary": "get facility by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getFacility",
        "parameters": [
          {
            "in": "path",
            "name": "facilityId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FacilityEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Facility/stats/{facilityId}": {
      "get": {
        "tags": [
          "Facility"
        ],
        "summary": "Get stats",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getFacilityStats",
        "parameters": [
          {
            "in": "path",
            "name": "facilityId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FacilityStatsEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Facility/query": {
      "post": {
        "tags": [
          "Facility"
        ],
        "description": "query facility",
        "operationId": "queryFacilities",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ],
        "summary": "query data"
      }
    },
    "/TwinUser/create": {
      "post": {
        "tags": [
          "Twin User"
        ],
        "summary": "Create twin user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createTwinUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TwinUserInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TwinUserEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/TwinUser/update": {
      "post": {
        "tags": [
          "Twin User"
        ],
        "summary": "Update twin user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateTwinUser",
        "parameters": [
          {
            "in": "header",
            "name": "twinUserId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TwinUserInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TwinUserEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/TwinUser/remove": {
      "delete": {
        "tags": [
          "Twin User"
        ],
        "summary": "Delete twin user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteTwinUser",
        "parameters": [
          {
            "in": "header",
            "name": "twinUserId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TwinUserEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/TwinUser/list": {
      "post": {
        "tags": [
          "Twin User"
        ],
        "summary": "List twin users",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listTwinUsers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TwinUserArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/TwinUser/search": {
      "post": {
        "tags": [
          "Twin User"
        ],
        "summary": "Search twin users",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchTwinUsers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TwinUserArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/TwinUser/get": {
      "post": {
        "tags": [
          "Twin User"
        ],
        "summary": "Get twin users",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getTwinUsers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TwinUserArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/TwinUser/one/{twinUserId}": {
      "get": {
        "tags": [
          "Twin User"
        ],
        "summary": "get twin user by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getTwinUser",
        "parameters": [
          {
            "in": "path",
            "name": "twinUserId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TwinUserEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/TwinUser/set/admin/{twinUserId}": {
      "get": {
        "tags": [
          "Twin User"
        ],
        "summary": "set twin user as admin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "setAdmin",
        "parameters": [
          {
            "in": "path",
            "name": "twinUserId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TwinUserEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/TwinUser/unset/admin/{twinUserId}": {
      "get": {
        "tags": [
          "Twin User"
        ],
        "summary": "set twin user as regular user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "unsetAdmin",
        "parameters": [
          {
            "in": "path",
            "name": "twinUserId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TwinUserEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/TwinUser/set/client/admin/{twinUserId}/{clientId}": {
      "get": {
        "tags": [
          "Twin User"
        ],
        "summary": "set twin user as client admin",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "setClientAdmin",
        "parameters": [
          {
            "in": "path",
            "name": "twinUserId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clientId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TwinUserEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/TwinUser/unset/client/admin/{twinUserId}/{clientId}": {
      "get": {
        "tags": [
          "Twin User"
        ],
        "summary": "set twin user as regular client user",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "unsetClientAdmin",
        "parameters": [
          {
            "in": "path",
            "name": "twinUserId",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "clientId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TwinUserEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/TwinUser/count": {
      "get": {
        "tags": [
          "Twin User"
        ],
        "description": "count",
        "summary": "count",
        "operationId": "countTwinUsers",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CountRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/TwinUser/query": {
      "post": {
        "tags": [
          "Twin User"
        ],
        "summary": "Search twin users",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryTwinUsers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Premise/create": {
      "post": {
        "tags": [
          "Premise"
        ],
        "summary": "Create premise",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createPremise",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PremiseInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PremiseEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Premise/update": {
      "post": {
        "tags": [
          "Premise"
        ],
        "summary": "Update premise",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updatePremise",
        "parameters": [
          {
            "in": "header",
            "name": "premiseId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PremiseInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PremiseEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Premise/remove": {
      "delete": {
        "tags": [
          "Premise"
        ],
        "summary": "Delete premise",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deletePremise",
        "parameters": [
          {
            "in": "header",
            "name": "premiseId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PremiseEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Premise/list": {
      "post": {
        "tags": [
          "Premise"
        ],
        "summary": "List premises",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listPremises",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PremiseArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Premise/search": {
      "post": {
        "tags": [
          "Premise"
        ],
        "summary": "Search premises",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchPremises",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PremiseArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Premise/get": {
      "post": {
        "tags": [
          "Premise"
        ],
        "summary": "Get premises",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getPremises",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PremiseArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Premise/one/{premiseId}": {
      "get": {
        "tags": [
          "Premise"
        ],
        "summary": "get premise by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getPremise",
        "parameters": [
          {
            "in": "path",
            "name": "premiseId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PremiseEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Premise/stats/{premiseId}": {
      "get": {
        "tags": [
          "Premise"
        ],
        "summary": "Get stats",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getPremiseStats",
        "parameters": [
          {
            "in": "path",
            "name": "premiseId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/PremiseStatsEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Premise/query": {
      "post": {
        "tags": [
          "Premise"
        ],
        "summary": "Search premises",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryPremises",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/ScrappingTable/create": {
      "post": {
        "tags": [
          "Scrapping Table"
        ],
        "summary": "Create scrapping table",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createScrappingTable",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScrappingTableInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ScrappingTableEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/ScrappingTable/update": {
      "post": {
        "tags": [
          "Scrapping Table"
        ],
        "summary": "Update scrapping table",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateScrappingTable",
        "parameters": [
          {
            "in": "header",
            "name": "scrappingTableId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScrappingTableInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ScrappingTableEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/ScrappingTable/remove": {
      "delete": {
        "tags": [
          "Scrapping Table"
        ],
        "summary": "Delete scrappingTable",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteScrappingTable",
        "parameters": [
          {
            "in": "header",
            "name": "scrappingTableid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ScrappingTableEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/ScrappingTable/list": {
      "post": {
        "tags": [
          "Scrapping Table"
        ],
        "summary": "List scrapping tables",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listScrappingTables",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ScrappingTableArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/ScrappingTable/search": {
      "post": {
        "tags": [
          "Scrapping Table"
        ],
        "summary": "Search scrapping tables",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchScrappingTables",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ScrappingTableArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/ScrappingTable/get": {
      "post": {
        "tags": [
          "Scrapping Table"
        ],
        "summary": "Get scrapping tables",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getScrappingTables",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ScrappingTableArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/ScrappingTable/one/{scrappingTableId}": {
      "get": {
        "tags": [
          "Scrapping Table"
        ],
        "summary": "get scrapping table by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getScrappingTable",
        "parameters": [
          {
            "in": "path",
            "name": "scrappingTableId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ScrappingTableEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/ScrappingTable/query": {
      "post": {
        "tags": [
          "Scrapping Table"
        ],
        "summary": "Search scrapping tables",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryScrappingTables",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/AssetGroup/create": {
      "post": {
        "tags": [
          "AssetGroup"
        ],
        "summary": "Create Asset Group",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createAssetGroup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssetGroupInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AssetGroupEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/AssetGroup/update": {
      "post": {
        "tags": [
          "AssetGroup"
        ],
        "summary": "Update Asset Group",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateAssetGroup",
        "parameters": [
          {
            "in": "header",
            "name": "assetGroupId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssetGroupInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AssetGroupEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/AssetGroup/remove": {
      "delete": {
        "tags": [
          "AssetGroup"
        ],
        "summary": "Delete Asset Group",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteAssetGroup",
        "parameters": [
          {
            "in": "header",
            "name": "assetGroupId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AssetGroupEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/AssetGroup/list": {
      "post": {
        "tags": [
          "AssetGroup"
        ],
        "summary": "List Asset Groups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listAssetGroups",
        "parameters": [
          {
            "in": "header",
            "name": "myGroups",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AssetGroupArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/AssetGroup/search": {
      "post": {
        "tags": [
          "AssetGroup"
        ],
        "summary": "Search Asset Groups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchAssetGroups",
        "parameters": [
          {
            "in": "header",
            "name": "myGroups",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AssetGroupArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/AssetGroup/query": {
      "post": {
        "tags": [
          "AssetGroup"
        ],
        "summary": "Search Asset Groups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryAssetGroups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Report/create": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "Create report",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createReport",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ReportEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Report/update": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "Update report",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateReport",
        "parameters": [
          {
            "in": "header",
            "name": "reportId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReportInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ReportEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Report/remove": {
      "delete": {
        "tags": [
          "Report"
        ],
        "summary": "Delete report",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteReport",
        "parameters": [
          {
            "in": "header",
            "name": "reportId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ReportEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Report/list": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "List reports",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listReports",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "myReports",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ReportArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Report/search": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "Search reports",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchReports",
        "parameters": [
          {
            "in": "header",
            "name": "modelId",
            "required": false,
            "type": "string"
          },
          {
            "in": "header",
            "name": "myReports",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ReportArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Report/get": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "Get reports",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getReports",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ReportArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Report/one/{reportId}": {
      "get": {
        "tags": [
          "Report"
        ],
        "summary": "get report by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getReport",
        "parameters": [
          {
            "in": "path",
            "name": "reportId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ReportEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Report/query": {
      "post": {
        "tags": [
          "Report"
        ],
        "summary": "Search reports",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryReports",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/AssetModel/create": {
      "post": {
        "tags": [
          "Asset Model"
        ],
        "summary": "Create asset model",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createAssetModel",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssetModelInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AssetModelEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/AssetModel/update": {
      "post": {
        "tags": [
          "Asset Model"
        ],
        "summary": "Update asset model",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateAssetModel",
        "parameters": [
          {
            "in": "header",
            "name": "assetModelId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssetModelInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AssetModelEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/AssetModel/remove": {
      "delete": {
        "tags": [
          "Asset Model"
        ],
        "summary": "Delete asset model",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteAssetModel",
        "parameters": [
          {
            "in": "header",
            "name": "assetModelId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AssetModelEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/AssetModel/list": {
      "post": {
        "tags": [
          "Asset Model"
        ],
        "summary": "List asset models",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listAssetModels",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AssetModelArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/AssetModel/search": {
      "post": {
        "tags": [
          "Asset Model"
        ],
        "summary": "Search asset models",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchAssetModels",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AssetModelArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/AssetModel/get": {
      "post": {
        "tags": [
          "Asset Model"
        ],
        "summary": "Get asset models",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getAssetModels",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AssetModelArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/AssetModel/one/{assetModelId}": {
      "get": {
        "tags": [
          "Asset Model"
        ],
        "summary": "get asset model by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getAssetModel",
        "parameters": [
          {
            "in": "path",
            "name": "assetModelId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/AssetModelEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/AssetModel/query": {
      "post": {
        "tags": [
          "Asset Model"
        ],
        "summary": "Search asset models",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryAssetModels",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/FieldFilter/create": {
      "post": {
        "tags": [
          "Field Filter"
        ],
        "summary": "Create field filter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createFieldFilter",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FieldFilterInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FieldFilterEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/FieldFilter/update": {
      "post": {
        "tags": [
          "Field Filter"
        ],
        "summary": "Update field filter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateFieldFilter",
        "parameters": [
          {
            "in": "header",
            "name": "fieldFilterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/FieldFilterInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FieldFilterEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/FieldFilter/remove": {
      "delete": {
        "tags": [
          "Field Filter"
        ],
        "summary": "Delete field filter",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteFieldFilter",
        "parameters": [
          {
            "in": "header",
            "name": "fieldFilterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FieldFilterEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/FieldFilter/list": {
      "post": {
        "tags": [
          "Field Filter"
        ],
        "summary": "List field filters",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listFieldFilters",
        "parameters": [
          {
            "in": "header",
            "name": "myFilters",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FieldFilterArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/FieldFilter/search": {
      "post": {
        "tags": [
          "Field Filter"
        ],
        "summary": "Search field filters",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchFieldFilters",
        "parameters": [
          {
            "in": "header",
            "name": "myFilters",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FieldFilterArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/FieldFilter/get": {
      "post": {
        "tags": [
          "Field Filter"
        ],
        "summary": "Get field filters",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getFieldFilters",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FieldFilterArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/FieldFilter/one/{fieldFilterId}": {
      "get": {
        "tags": [
          "Field Filter"
        ],
        "summary": "get field filter by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getFieldFilter",
        "parameters": [
          {
            "in": "path",
            "name": "fieldFilterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/FieldFilterEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/FieldFilter/query": {
      "post": {
        "tags": [
          "Field Filter"
        ],
        "summary": "Search field filters",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryFieldFilters",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Client/create": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Create client",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createClient",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ClientEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Client/update": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Update client",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateClient",
        "parameters": [
          {
            "in": "header",
            "name": "clientId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClientInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ClientEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Client/remove": {
      "delete": {
        "tags": [
          "Client"
        ],
        "summary": "Delete client",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteClient",
        "parameters": [
          {
            "in": "header",
            "name": "clientId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ClientEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Client/list": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "List clients",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listClients",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ClientArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Client/search": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Search clients",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchClients",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ClientArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Client/get": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Get clients",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getClients",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ClientArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Client/one/{clientId}": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "get client by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getClient",
        "parameters": [
          {
            "in": "path",
            "name": "clientId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ClientEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Client/count": {
      "get": {
        "tags": [
          "Client"
        ],
        "description": "count",
        "summary": "count",
        "operationId": "countClients",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CountRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/Client/query": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Search clients",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryClients",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/CustomEntity/mapping/set": {
      "post": {
        "tags": [
          "Custom Entity"
        ],
        "summary": "Create update custom entity mapping",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "upsertCustomEntityMapping",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomEntityMappingInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CustomEntityMappingRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/CustomEntity/mapping/get/{name}": {
      "get": {
        "tags": [
          "Custom Entity"
        ],
        "summary": "Get custom entity mapping",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getCustomEntityMapping",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CustomEntityMappingRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/CustomEntity/mapping/list": {
      "get": {
        "tags": [
          "Custom Entity"
        ],
        "summary": "Get custom entity mapping",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listCustomEntityMapping",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CustomEntityMappingArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/CustomEntity/create/{name}": {
      "post": {
        "tags": [
          "Custom Entity"
        ],
        "summary": "Create custom entity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createCustomEntity",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "header",
            "name": "id",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CustomEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/CustomEntity/update/{name}/{id}": {
      "post": {
        "tags": [
          "Custom Entity"
        ],
        "summary": "Update custom entity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateCustomEntity",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CustomEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/CustomEntity/remove/{name}/{id}": {
      "delete": {
        "tags": [
          "Custom Entity"
        ],
        "summary": "Remove custom entity",
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteCustomEntity",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CustomEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/CustomEntity/get/{name}/{id}": {
      "get": {
        "tags": [
          "Custom Entity"
        ],
        "summary": "Get custom entity",
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getCustomEntity",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CustomEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/CustomEntity/search/{name}": {
      "post": {
        "tags": [
          "Custom Entity"
        ],
        "summary": "Search custom entities",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchCustomEntities",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomSearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/CustomEntityArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/CustomEntity/clear/{name}": {
      "delete": {
        "tags": [
          "Custom Entity"
        ],
        "summary": "Remove all custom entities",
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "removeAllCustomEntities",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/CustomEntity/bulk/upload/csv/{name}": {
      "post": {
        "tags": [
          "Custom Entity"
        ],
        "summary": "bulk upload",
        "description": "bulk upload",
        "operationId": "bulkUploadCustomEntityCsv",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/CustomEntity/bulk/upload/excel": {
      "post": {
        "tags": [
          "Custom Entity"
        ],
        "summary": "bulk upload",
        "description": "bulk upload",
        "operationId": "bulkUploadCustomEntityExcel",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          },
          {
            "in": "formData",
            "name": "sheet",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/BaseResponse"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/CustomEntity/query/{name}": {
      "post": {
        "tags": [
          "Custom Entity"
        ],
        "summary": "Search custom entities",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryCustomEntities",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/TwinImage/upload": {
      "post": {
        "tags": [
          "Image"
        ],
        "summary": "Upload twin image",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "uploadImage",
        "parameters": [
          {
            "name": "tags",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TwinImageEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/TwinImage/remove/{id}": {
      "delete": {
        "tags": [
          "Image"
        ],
        "summary": "Delete image",
        "consumes": [
          "text/plain"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Delete image",
        "operationId": "deleteImage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Image ID",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TwinImageEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/TwinImage/download/{domainKey}/{id}": {
      "get": {
        "tags": [
          "Image"
        ],
        "summary": "Get image",
        "description": "Download image",
        "operationId": "domanloadImage",
        "parameters": [
          {
            "name": "domainKey",
            "in": "path",
            "description": "Domain key",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "description": "Image ID",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/TwinImage/search": {
      "post": {
        "tags": [
          "Image"
        ],
        "summary": "Search images",
        "consumes": [
          "application/json"
        ],
        "description": "Search images",
        "operationId": "searchImages",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TwinImageArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/TwinImage/search/tags": {
      "post": {
        "tags": [
          "Image"
        ],
        "summary": "Search images by tags",
        "consumes": [
          "application/json"
        ],
        "description": "Search images by tags",
        "operationId": "searchImagesByTags",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchTagReq"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/TwinImageArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/TwinImage/query": {
      "post": {
        "tags": [
          "Image"
        ],
        "summary": "Search images",
        "consumes": [
          "application/json"
        ],
        "description": "Search images",
        "operationId": "queryImages",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/ApiToken/create": {
      "post": {
        "tags": [
          "Api Token"
        ],
        "summary": "Create token",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createApiToken",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiTokenInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ApiTokenEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/ApiToken/remove": {
      "delete": {
        "tags": [
          "Api Token"
        ],
        "summary": "Delete token",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteApiToken",
        "parameters": [
          {
            "in": "header",
            "name": "tokenId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ApiTokenEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/ApiToken/list": {
      "post": {
        "tags": [
          "Api Token"
        ],
        "summary": "List tokens",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listTokens",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/ApiTokenArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/EqlTemplate/create": {
      "post": {
        "tags": [
          "Eql Template"
        ],
        "summary": "Create eql template",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "createEqlTemplate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EqlTemplateInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/EqlTemplateEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/EqlTemplate/update": {
      "post": {
        "tags": [
          "Eql Template"
        ],
        "summary": "Update eql template",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "updateEqlTemplate",
        "parameters": [
          {
            "in": "header",
            "name": "eqlTemplateId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EqlTemplateInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/EqlTemplateEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/EqlTemplate/remove": {
      "delete": {
        "tags": [
          "Eql Template"
        ],
        "summary": "Delete eql template",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "deleteEqlTemplate",
        "parameters": [
          {
            "in": "header",
            "name": "eqlTemplateId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/EqlTemplateEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/EqlTemplate/list": {
      "post": {
        "tags": [
          "Eql Template"
        ],
        "summary": "List eql templates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "listEqlTemplates",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ListReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/EqlTemplateArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/EqlTemplate/search": {
      "post": {
        "tags": [
          "Eql Template"
        ],
        "summary": "Search eql templates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "searchEqlTemplates",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SearchReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/EqlTemplateArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/EqlTemplate/get": {
      "post": {
        "tags": [
          "Eql Template"
        ],
        "summary": "Get eql templates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getEqlTemplates",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/EqlTemplateArrayRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/EqlTemplate/one/{eqlTemplateId}": {
      "get": {
        "tags": [
          "Eql Template"
        ],
        "summary": "get eql template by id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "getEqlTemplate",
        "parameters": [
          {
            "in": "path",
            "name": "eqlTemplateId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/EqlTemplateEntityRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/EqlTemplate/execute": {
      "post": {
        "tags": [
          "Eql Template"
        ],
        "summary": "Execute eql template",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "executeEqlTemplate",
        "parameters": [
          {
            "in": "body",
            "name": "eql",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EqlExecuteReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    },
    "/EqlTemplate/query": {
      "post": {
        "tags": [
          "Eql Template"
        ],
        "summary": "Search eql templates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "operationId": "queryEqlTemplates",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QueryReq"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "$ref": "#/definitions/QueryRes"
            }
          }
        },
        "security": [
          {
            "apiKey": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "apiKey": {
      "type": "apiKey",
      "name": "ATOKEN",
      "in": "header"
    }
  },
  "definitions": {
    "BaseResponse": {
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "type": "integer"
        },
        "msg": {
          "type": "string"
        },
        "trace": {
          "type": "string"
        },
        "errorCode": {
          "type": "string"
        }
      }
    },
    "BaseEntity": {
      "type": "object",
      "discriminator": "baseEntity",
      "required": [
        "id",
        "rtype",
        "createdStamp",
        "updatedStamp",
        "createdBy",
        "updatedBy"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "rtype": {
          "type": "string"
        },
        "stype": {
          "type": "string"
        },
        "createdStamp": {
          "type": "integer",
          "format": "int64"
        },
        "updatedStamp": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        }
      }
    },
    "DisplayableEntity": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "iconId": {
          "type": "string"
        },
        "selectedImageId": {
          "type": "string"
        },
        "selectedBannerId": {
          "type": "string"
        }
      }
    },
    "DomainBaseInfo": {
      "type": "object",
      "required": [
        "name",
        "email"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "allowRegistration": {
          "type": "boolean"
        },
        "properties": {
          "type": "object",
          "default": {}
        },
        "location": {
          "$ref": "#/definitions/GeoLocation"
        },
        "customIndexes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DomainInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/DisplayableEntity"
        },
        {
          "$ref": "#/definitions/DomainBaseInfo"
        }
      ],
      "type": "object"
    },
    "BaseDomainEntity": {
      "type": "object",
      "properties": {
        "domainKey": {
          "type": "string"
        },
        "entityState": {
          "type": "string",
          "enum": [
            "NORMAL",
            "DISABLED"
          ]
        }
      }
    },
    "Domain": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseDomainEntity"
        },
        {
          "$ref": "#/definitions/DisplayableEntity"
        },
        {
          "$ref": "#/definitions/DomainBaseInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "FireReq": {
      "type": "object",
      "required": [
        "deviceId",
        "controlId",
        "controlState"
      ],
      "properties": {
        "deviceId": {
          "type": "string"
        },
        "controlId": {
          "type": "string"
        },
        "controlState": {
          "type": "integer"
        },
        "arguments": {
          "type": "object"
        }
      }
    },
    "GetReq": {
      "type": "object",
      "required": [
        "ids"
      ],
      "properties": {
        "ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ListReq": {
      "type": "object",
      "required": [
        "page",
        "size"
      ],
      "properties": {
        "page": {
          "type": "integer",
          "default": 0
        },
        "size": {
          "type": "integer",
          "default": 100
        }
      }
    },
    "ListRes": {
      "type": "object",
      "required": [
        "page",
        "size",
        "total"
      ],
      "properties": {
        "page": {
          "type": "integer"
        },
        "size": {
          "type": "integer"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "SearchReqBase": {
      "type": "object",
      "required": [
        "query"
      ],
      "properties": {
        "query": {
          "type": "object"
        }
      }
    },
    "SearchReq": {
      "allOf": [
        {
          "$ref": "#/definitions/SearchReqBase"
        },
        {
          "$ref": "#/definitions/ListReq"
        },
        {
          "type": "object"
        }
      ]
    },
    "QueryReq": {
      "type": "object",
      "required": [
        "eqlTemplateName"
      ],
      "properties": {
        "eqlTemplateName": {
          "type": "string"
        },
        "context": {
          "type": "object"
        }
      }
    },
    "SearchTagReqBase": {
      "type": "object",
      "required": [
        "tags"
      ],
      "properties": {
        "tags": {
          "type": "string"
        }
      }
    },
    "SearchTagReq": {
      "allOf": [
        {
          "$ref": "#/definitions/SearchTagReqBase"
        },
        {
          "$ref": "#/definitions/ListReq"
        },
        {
          "type": "object"
        }
      ]
    },
    "RangeFilter": {
      "type": "object",
      "properties": {
        "tz": {
          "type": "string",
          "default": "GMT"
        },
        "filter": {
          "type": "string",
          "enum": [
            "RECENT",
            "TODAY",
            "YESTERDAY",
            "THISWEEK",
            "LASTWEEK",
            "THISMONTH",
            "LASTMONTH",
            "THISQUARTER",
            "THISYEAR",
            "LASTYEAR",
            "RANGE"
          ]
        },
        "beginStamp": {
          "type": "integer",
          "format": "int64"
        },
        "endStamp": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "FilterReqBase": {
      "type": "object",
      "properties": {
        "filter": {
          "$ref": "#/definitions/RangeFilter"
        }
      }
    },
    "FilterSearchReq": {
      "allOf": [
        {
          "$ref": "#/definitions/SearchReqBase"
        },
        {
          "$ref": "#/definitions/FilterReqBase"
        },
        {
          "$ref": "#/definitions/ListReq"
        },
        {
          "type": "object"
        }
      ]
    },
    "Parameter": {
      "type": "object",
      "required": [
        "name",
        "parameterType",
        "required"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "parameterType": {
          "type": "string",
          "enum": [
            "YESNO",
            "NUMERIC",
            "FLOATING",
            "TEXT"
          ]
        },
        "required": {
          "type": "boolean",
          "default": false
        },
        "defaultValue": {
          "type": "string"
        },
        "enableTrend": {
          "type": "boolean",
          "default": false
        },
        "enableTimeSeries": {
          "type": "boolean",
          "default": false
        },
        "unit": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "sensorWidget": {
          "$ref": "#/definitions/SensorWidget"
        }
      }
    },
    "ScrappingTableConfig": {
      "type": "object",
      "required": [
        "lookupName",
        "scrappingTableName",
        "scrappingTableIds"
      ],
      "properties": {
        "lookupName": {
          "type": "string"
        },
        "scrappingTableName": {
          "type": "string"
        },
        "scrappingTableIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DeviceModelInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/DisplayableEntity"
        }
      ],
      "type": "object",
      "required": [
        "name",
        "make",
        "model",
        "version",
        "parameters"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "make": {
          "type": "string",
          "default": "-"
        },
        "model": {
          "type": "string",
          "default": "-"
        },
        "version": {
          "type": "string",
          "default": "-"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Parameter"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metadata": {
          "type": "object"
        },
        "defaultView": {
          "type": "string",
          "default": "BUILTIN"
        },
        "preprocessorId": {
          "type": "string"
        },
        "hasGeoLocation": {
          "type": "boolean"
        },
        "movable": {
          "type": "boolean"
        },
        "customWidget": {
          "$ref": "#/definitions/CustomWidget"
        },
        "makePublic": {
          "type": "boolean",
          "default": false
        },
        "scrappingTableConfigs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScrappingTableConfig"
          }
        }
      }
    },
    "DeviceModel": {
      "allOf": [
        {
          "$ref": "#/definitions/DeviceModelInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "DeviceModelEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/DeviceModel"
        }
      }
    },
    "DeviceModelEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/DeviceModelEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "DeviceModelArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceModel"
          }
        }
      }
    },
    "DeviceModelArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/DeviceModelArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "DeviceInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/DisplayableEntity"
        }
      ],
      "type": "object",
      "required": [
        "name",
        "modelId",
        "deviceId"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "modelId": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metadata": {
          "type": "object"
        },
        "defaultView": {
          "type": "string",
          "default": "BUILTIN"
        },
        "hasGeoLocation": {
          "type": "boolean"
        },
        "movable": {
          "type": "boolean"
        },
        "geolocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "customWidget": {
          "$ref": "#/definitions/CustomWidget"
        },
        "reportedStamp": {
          "type": "integer",
          "format": "int64"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Parameter"
          }
        },
        "clientId": {
          "type": "string"
        }
      }
    },
    "DeviceBase": {
      "type": "object",
      "required": [
        "apiKey",
        "reportedStamp"
      ],
      "properties": {
        "apiKey": {
          "type": "string"
        },
        "reportedStamp": {
          "type": "integer",
          "format": "int64"
        },
        "premiseId": {
          "type": "string"
        },
        "facilityId": {
          "type": "string"
        },
        "floorId": {
          "type": "string"
        },
        "assetId": {
          "type": "string"
        },
        "premise": {
          "type": "string"
        },
        "facility": {
          "type": "string"
        },
        "floor": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "client": {
          "type": "string"
        },
        "currentLocation": {
          "$ref": "#/definitions/GeoLocation"
        }
      }
    },
    "Device": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseDomainEntity"
        },
        {
          "$ref": "#/definitions/DeviceBase"
        },
        {
          "$ref": "#/definitions/DeviceInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "DeviceEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Device"
        }
      }
    },
    "DeviceEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/DeviceEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "DeviceArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Device"
          }
        }
      }
    },
    "DeviceArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/DeviceArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "ConditionInfo": {
      "type": "object",
      "required": [
        "name",
        "modelId",
        "field",
        "condition"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "modelId": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "field": {
          "type": "string"
        },
        "condition": {
          "type": "string",
          "enum": [
            "LT",
            "LTE",
            "GT",
            "GTE",
            "EQ",
            "NEQ",
            "BETWEEN",
            "NBETWEEN",
            "CONTAINS",
            "NCONTAINS"
          ]
        },
        "value": {
          "type": "string"
        },
        "leftValue": {
          "type": "string"
        },
        "rightValue": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Condition": {
      "allOf": [
        {
          "$ref": "#/definitions/ConditionInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "ConditionEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Condition"
        }
      }
    },
    "ConditionEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ConditionEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "ConditionArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Condition"
          }
        }
      }
    },
    "ConditionArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/ConditionArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "MatchGroup": {
      "type": "object",
      "required": [
        "matchType",
        "conditions"
      ],
      "properties": {
        "matchType": {
          "type": "string",
          "enum": [
            "ANY",
            "ALL"
          ]
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AlarmMatchGroup": {
      "type": "object",
      "required": [
        "matchType",
        "conditions",
        "alarmState"
      ],
      "properties": {
        "matchType": {
          "type": "string",
          "enum": [
            "ANY",
            "ALL"
          ]
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "alarmState": {
          "type": "integer",
          "default": 0
        },
        "deviceState": {
          "type": "integer",
          "default": 0
        },
        "tooltip": {
          "type": "string"
        }
      }
    },
    "AlarmInfo": {
      "type": "object",
      "required": [
        "name",
        "state",
        "conditions"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "modelId": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "state": {
          "type": "integer",
          "default": 0
        },
        "stateIcons": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlarmMatchGroup"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "showOnlyIfMatched": {
          "type": "boolean"
        }
      }
    },
    "Alarm": {
      "allOf": [
        {
          "$ref": "#/definitions/AlarmInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "AlarmEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Alarm"
        }
      }
    },
    "AlarmEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/AlarmEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "AlarmArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alarm"
          }
        }
      }
    },
    "AlarmArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/AlarmArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "CommandParameter": {
      "type": "object",
      "required": [
        "name",
        "label",
        "parameterType",
        "required"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "parameterType": {
          "type": "string",
          "enum": [
            "YESNO",
            "NUMERIC",
            "FLOATING",
            "TEXT"
          ]
        },
        "required": {
          "type": "boolean",
          "default": true
        },
        "defaultValue": {
          "type": "string"
        }
      }
    },
    "ControlCommand": {
      "type": "object",
      "required": [
        "type",
        "commandType"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "FIXED",
            "DYNAMIC"
          ]
        },
        "commandType": {
          "type": "string",
          "enum": [
            "JSON",
            "TEXT",
            "BINARY",
            "PARAMETERS"
          ]
        },
        "jsonValue": {
          "type": "object"
        },
        "textValue": {
          "type": "string"
        },
        "binaryValue": {
          "type": "string",
          "description": "base64 encoded value"
        },
        "parameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CommandParameter"
          }
        }
      }
    },
    "NameValue": {
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "ControlTargetMqtt": {
      "type": "object",
      "required": [
        "url",
        "topic"
      ],
      "properties": {
        "url": {
          "type": "string"
        },
        "topic": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "ControlTargetHttp": {
      "type": "object",
      "required": [
        "url",
        "protocol"
      ],
      "properties": {
        "url": {
          "type": "string"
        },
        "protocol": {
          "type": "string",
          "enum": [
            "GET",
            "PUT",
            "POST",
            "DELETE"
          ]
        },
        "headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValue"
          }
        },
        "queryParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NameValue"
          }
        },
        "basicAuthUserName": {
          "type": "string"
        },
        "basicAuthPassword": {
          "type": "string"
        }
      }
    },
    "ControlInfo": {
      "type": "object",
      "required": [
        "name",
        "modelId",
        "command",
        "target"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "modelId": {
          "type": "string"
        },
        "command": {
          "$ref": "#/definitions/ControlCommand"
        },
        "enableIf": {
          "$ref": "#/definitions/MatchGroup"
        },
        "icon": {
          "type": "string"
        },
        "disabledIcon": {
          "type": "string"
        },
        "allowUsers": {
          "type": "boolean"
        },
        "visibleIfDisabled": {
          "type": "boolean"
        },
        "target": {
          "type": "string",
          "enum": [
            "BUILTIN",
            "MQTT",
            "HTTP"
          ]
        },
        "targetMqtt": {
          "$ref": "#/definitions/ControlTargetMqtt"
        },
        "targetHttp": {
          "$ref": "#/definitions/ControlTargetHttp"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ControlBase": {
      "type": "object",
      "required": [
        "enabled"
      ],
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "Control": {
      "allOf": [
        {
          "$ref": "#/definitions/ControlInfo"
        },
        {
          "$ref": "#/definitions/ControlBase"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "ControlEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Control"
        }
      }
    },
    "ControlEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ControlEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "ControlArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Control"
          }
        }
      }
    },
    "ControlArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/ControlArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "EventInfo": {
      "type": "object",
      "required": [
        "name",
        "state",
        "conditions"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "modelId": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "assetId": {
          "type": "string"
        },
        "premiseId": {
          "type": "string"
        },
        "facilityId": {
          "type": "string"
        },
        "floorId": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MatchGroup"
          }
        },
        "notificationTemplate": {
          "$ref": "#/definitions/NotificationTemplate"
        },
        "emailTemplate": {
          "$ref": "#/definitions/EmailTemplate"
        },
        "smsTemplate": {
          "$ref": "#/definitions/SMSTemplate"
        },
        "fcmTemplate": {
          "$ref": "#/definitions/FCMTemplate"
        },
        "voiceTemplate": {
          "$ref": "#/definitions/VoiceTemplate"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sourceType": {
          "type": "string",
          "enum": [
            "MODEL",
            "DEVICE",
            "ASSET",
            "PREMISE",
            "FACILITY",
            "FLOOR"
          ]
        },
        "isPulseGroup": {
          "type": "boolean"
        },
        "pulseGroupId": {
          "type": "string"
        },
        "pulseTemplateId": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        }
      }
    },
    "Event": {
      "allOf": [
        {
          "$ref": "#/definitions/EventInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "EventEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Event"
        }
      }
    },
    "EventEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/EventEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "EventArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event"
          }
        }
      }
    },
    "EventArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/EventArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "HttpParam": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "HttpConfig": {
      "type": "object",
      "description": "required if deliveryTarget is **HTTP**",
      "required": [
        "url",
        "protocol"
      ],
      "properties": {
        "url": {
          "type": "string"
        },
        "protocol": {
          "type": "string",
          "enum": [
            "POST",
            "PUT"
          ]
        },
        "headers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HttpParam"
          }
        },
        "queryParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HttpParam"
          }
        }
      }
    },
    "UdpConfig": {
      "type": "object",
      "description": "required if deliveryTarget is **UDP**",
      "required": [
        "host",
        "port"
      ],
      "properties": {
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        }
      }
    },
    "MqttConfig": {
      "type": "object",
      "description": "required if deliveryTarget is **MQTT**",
      "required": [
        "host",
        "port",
        "topic"
      ],
      "properties": {
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer"
        },
        "topic": {
          "type": "string"
        },
        "qos": {
          "type": "integer",
          "default": 0
        }
      }
    },
    "TriggerControl": {
      "type": "object",
      "required": [
        "triggerTarget",
        "controlState"
      ],
      "properties": {
        "controlState": {
          "type": "integer"
        },
        "triggerTarget": {
          "type": "string",
          "enum": [
            "THISDEVICE",
            "OTHERDEVICE"
          ],
          "default": "THISDEVICE"
        },
        "triggerType": {
          "type": "string",
          "enum": [
            "FIRE",
            "CHANGESTATE"
          ],
          "default": "FIRE"
        },
        "deliveryTarget": {
          "type": "string",
          "enum": [
            "BUILTIN",
            "HTTP",
            "MQTT",
            "UDP"
          ],
          "default": "BUILTIN"
        },
        "controlId": {
          "type": "string"
        },
        "otherDeviceId": {
          "type": "string",
          "description": "required if triggerTarget is **OTHERDEVICE**"
        },
        "otherControlId": {
          "type": "string",
          "description": "required if triggerTarget is **OTHERDEVICE**"
        },
        "httpConfig": {
          "$ref": "#/definitions/HttpConfig"
        },
        "mqttConfig": {
          "$ref": "#/definitions/MqttConfig"
        },
        "udpConfig": {
          "$ref": "#/definitions/UdpConfig"
        }
      }
    },
    "TriggerInfo": {
      "type": "object",
      "required": [
        "name",
        "modelId",
        "state",
        "conditions",
        "controls"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "modelId": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MatchGroup"
          }
        },
        "controls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TriggerControl"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Trigger": {
      "allOf": [
        {
          "$ref": "#/definitions/TriggerInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "TriggerEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Trigger"
        }
      }
    },
    "TriggerEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/TriggerEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "TriggerArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Trigger"
          }
        }
      }
    },
    "TriggerArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/TriggerArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "NotificationTemplate": {
      "type": "object",
      "required": [
        "title",
        "content"
      ],
      "properties": {
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        }
      }
    },
    "EmailTemplate": {
      "type": "object",
      "required": [
        "subject",
        "content"
      ],
      "properties": {
        "subject": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "isHtml": {
          "type": "boolean"
        }
      }
    },
    "FCMTemplate": {
      "type": "object",
      "required": [
        "title",
        "content"
      ],
      "properties": {
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        }
      }
    },
    "SMSTemplate": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "VoiceTemplate": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "TwinImageInfo": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TwinImageBase": {
      "type": "object",
      "required": [
        "contentType"
      ],
      "properties": {
        "contentType": {
          "type": "string"
        }
      }
    },
    "TwinImage": {
      "allOf": [
        {
          "$ref": "#/definitions/TwinImageInfo"
        },
        {
          "$ref": "#/definitions/TwinImageBase"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "TwinImageEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/TwinImage"
        }
      }
    },
    "TwinImageEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/TwinImageEntity"
        },
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "type": "object"
        }
      ]
    },
    "TwinImageArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TwinImage"
          }
        }
      }
    },
    "TwinImageArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/TwinImageArray"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "type": "object"
        }
      ]
    },
    "DisplayMatchGroup": {
      "type": "object",
      "required": [
        "matchType",
        "conditions",
        "font",
        "fontSize",
        "fontColor",
        "width",
        "height"
      ],
      "properties": {
        "matchType": {
          "type": "string",
          "enum": [
            "ANY",
            "ALL"
          ]
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "font": {
          "type": "string"
        },
        "fontSize": {
          "type": "number",
          "format": "double"
        },
        "fontColor": {
          "type": "integer",
          "format": "int64"
        },
        "fontStyle": {
          "type": "string"
        },
        "fontWeight": {
          "type": "integer"
        },
        "bordorColor": {
          "type": "integer",
          "format": "int64"
        },
        "borderType": {
          "type": "string",
          "enum": [
            "NONE",
            "BOX",
            "ROUNDED",
            "CIRCLE"
          ]
        },
        "value": {
          "type": "string",
          "description": "by default the actual field value will be rendered, set the **field** to render a different field value, or replace the default text into a custom value"
        },
        "bgColor": {
          "type": "integer",
          "format": "int64"
        },
        "prefixText": {
          "type": "string"
        },
        "prefixFont": {
          "type": "string"
        },
        "prefixFontSize": {
          "type": "number",
          "format": "double"
        },
        "prefixFontColor": {
          "type": "integer",
          "format": "int64"
        },
        "prefixFontStyle": {
          "type": "string"
        },
        "prefixFontWeight": {
          "type": "integer"
        },
        "prefixPadding": {
          "type": "number",
          "format": "double"
        },
        "suffixText": {
          "type": "string"
        },
        "suffixFont": {
          "type": "string"
        },
        "suffixFontSize": {
          "type": "number",
          "format": "double"
        },
        "suffixFontColor": {
          "type": "integer",
          "format": "int64"
        },
        "suffixFontStyle": {
          "type": "string"
        },
        "suffixFontWeight": {
          "type": "integer"
        },
        "suffixPadding": {
          "type": "number",
          "format": "double"
        },
        "topText": {
          "type": "string"
        },
        "topFont": {
          "type": "string"
        },
        "topFontSize": {
          "type": "number",
          "format": "double"
        },
        "topFontColor": {
          "type": "integer",
          "format": "int64"
        },
        "topFontStyle": {
          "type": "string"
        },
        "topFontWeight": {
          "type": "integer"
        },
        "topPadding": {
          "type": "number",
          "format": "double"
        },
        "bottomText": {
          "type": "string"
        },
        "bottomFont": {
          "type": "string"
        },
        "bottomFontSize": {
          "type": "number",
          "format": "double"
        },
        "bottomFontColor": {
          "type": "integer",
          "format": "int64"
        },
        "bottomFontStyle": {
          "type": "string"
        },
        "bottomFontWeight": {
          "type": "integer"
        },
        "bottomPadding": {
          "type": "number",
          "format": "double"
        },
        "width": {
          "type": "number",
          "format": "double"
        },
        "height": {
          "type": "number",
          "format": "double"
        },
        "field": {
          "type": "string"
        },
        "tooltip": {
          "type": "string"
        }
      }
    },
    "DisplayInfo": {
      "type": "object",
      "required": [
        "name",
        "value",
        "conditions"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "modelId": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DisplayMatchGroup"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Display": {
      "allOf": [
        {
          "$ref": "#/definitions/DisplayInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "DisplayEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Display"
        }
      }
    },
    "DisplayEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/DisplayEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "DisplayArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Display"
          }
        }
      }
    },
    "DisplayArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/DisplayArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "Displayable": {
      "type": "object",
      "required": [
        "type",
        "id",
        "width",
        "height"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ALARM",
            "DISPLAY",
            "CONTROL",
            "WIDGET"
          ]
        },
        "id": {
          "type": "string",
          "description": "one of Alarm, Display, Control or DisplayWidget ID"
        },
        "width": {
          "type": "integer"
        },
        "height": {
          "type": "integer"
        }
      }
    },
    "Positionable": {
      "type": "object",
      "required": [
        "view"
      ],
      "properties": {
        "view": {
          "$ref": "#/definitions/Displayable"
        },
        "top": {
          "type": "integer"
        },
        "bottom": {
          "type": "integer"
        },
        "left": {
          "type": "integer"
        },
        "right": {
          "type": "integer"
        }
      }
    },
    "DeviceViewInfo": {
      "type": "object",
      "required": [
        "modelId",
        "name"
      ],
      "properties": {
        "modelId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "top": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Displayable"
          }
        },
        "bottom": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Displayable"
          }
        },
        "left": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Displayable"
          }
        },
        "right": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Displayable"
          }
        },
        "positioned": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Positionable"
          }
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "width": {
          "type": "integer",
          "default": 350
        },
        "height": {
          "type": "integer",
          "default": 350
        },
        "topHeight": {
          "type": "integer",
          "default": 50
        },
        "bottomHeight": {
          "type": "integer",
          "default": 50
        },
        "leftWidth": {
          "type": "integer",
          "default": 50
        },
        "rightWidth": {
          "type": "integer",
          "default": 50
        },
        "showInfo": {
          "type": "boolean",
          "default": true
        },
        "infoPosition": {
          "type": "string",
          "enum": [
            "TOP",
            "BOTTOM",
            "LEFT",
            "RIGHT"
          ],
          "default": "BOTTOM"
        },
        "border": {
          "type": "string",
          "enum": [
            "NONE",
            "BOX",
            "CIRCLE"
          ],
          "default": "NONE"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DeviceView": {
      "allOf": [
        {
          "$ref": "#/definitions/DeviceViewInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "DeviceViewEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/DeviceView"
        }
      }
    },
    "DeviceViewEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/DeviceViewEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "DeviceViewArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceView"
          }
        }
      }
    },
    "DeviceViewArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/DeviceViewArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "EvaluatedAlarm": {
      "type": "object",
      "required": [
        "alarmId",
        "state",
        "stateIcon"
      ],
      "properties": {
        "alarmId": {
          "type": "string"
        },
        "state": {
          "type": "integer"
        },
        "stateIcon": {
          "type": "string"
        },
        "tooltip": {
          "type": "string"
        },
        "deviceState": {
          "type": "integer"
        }
      }
    },
    "EvaluatedDisplay": {
      "type": "object",
      "required": [
        "displayId",
        "prefix",
        "suffix",
        "value",
        "conditionIndex"
      ],
      "properties": {
        "displayId": {
          "type": "string"
        },
        "prefix": {
          "type": "string"
        },
        "suffix": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "conditionIndex": {
          "type": "integer"
        },
        "tooltip": {
          "type": "string"
        }
      }
    },
    "EvaluatedControl": {
      "type": "object",
      "required": [
        "controlId",
        "enabled",
        "icon",
        "name",
        "description"
      ],
      "properties": {
        "controlId": {
          "type": "string"
        },
        "enabled": {
          "type": "integer"
        },
        "icon": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "EvaluatedEvent": {
      "type": "object",
      "required": [
        "eventId",
        "icon",
        "name",
        "description"
      ],
      "properties": {
        "eventId": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "TriggeredControl": {
      "type": "object",
      "required": [
        "id",
        "controlId",
        "modelId",
        "deviceId",
        "triggerId"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "controlId": {
          "type": "string"
        },
        "modelId": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "triggerId": {
          "type": "string"
        },
        "triggerIcon": {
          "type": "string"
        },
        "hardwareDeviceId": {
          "type": "string"
        },
        "state": {
          "type": "integer"
        },
        "stateIcon": {
          "type": "string"
        },
        "data": {
          "type": "object"
        },
        "rtype": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "createdStamp": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "updatedStamp": {
          "type": "integer",
          "format": "int64"
        },
        "deliveryStatus": {
          "type": "string",
          "enum": [
            "QUEUED",
            "SENT",
            "DELIVERED",
            "FAILED"
          ]
        },
        "deliveryErrors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deviceIcon": {
          "type": "string"
        }
      }
    },
    "EvaluatedTrigger": {
      "type": "object",
      "required": [
        "triggerId"
      ],
      "properties": {
        "triggerId": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        }
      }
    },
    "DeviceData": {
      "type": "object",
      "required": [
        "domainKey",
        "deviceId",
        "modelId",
        "hardwareDeviceId",
        "createdStamp",
        "updatedStamp",
        "data",
        "alarms",
        "displays",
        "events",
        "triggers"
      ],
      "properties": {
        "domainKey": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "subType": {
          "type": "string"
        },
        "modelId": {
          "type": "string"
        },
        "hardwareDeviceId": {
          "type": "string"
        },
        "reportedStamp": {
          "type": "integer",
          "format": "int64"
        },
        "processedStamp": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "object"
        },
        "deviceName": {
          "type": "string"
        },
        "modelName": {
          "type": "string"
        },
        "deviceDescription": {
          "type": "string"
        },
        "modelDescription": {
          "type": "string"
        },
        "deviceIcon": {
          "type": "string"
        },
        "modelIcon": {
          "type": "string"
        },
        "rtype": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "createdStamp": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "updatedStamp": {
          "type": "integer",
          "format": "int64"
        },
        "controls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EvaluatedControl"
          }
        },
        "alarms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EvaluatedAlarm"
          }
        },
        "displays": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EvaluatedDisplay"
          }
        },
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EvaluatedEvent"
          }
        },
        "triggers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EvaluatedTrigger"
          }
        },
        "evaluationErrors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "series": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "trends": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "geolocation": {
          "$ref": "#/definitions/GeoLocation"
        },
        "geocoded": {
          "type": "object"
        },
        "premise": {
          "type": "string"
        },
        "facility": {
          "type": "string"
        },
        "floor": {
          "type": "string"
        },
        "asset": {
          "type": "string"
        },
        "premiseId": {
          "type": "string"
        },
        "facilityId": {
          "type": "string"
        },
        "floorId": {
          "type": "string"
        },
        "assetId": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientId": {
          "type": "string"
        },
        "client": {
          "type": "string"
        },
        "assetModel": {
          "type": "string"
        },
        "assetModelId": {
          "type": "string"
        }
      }
    },
    "DeviceDataArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeviceData"
          }
        }
      }
    },
    "DeviceDataArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/DeviceDataArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "DashboardMenu": {
      "type": "object",
      "required": [
        "displayName",
        "webSupported",
        "tabletSupported",
        "mobileSupported",
        "screenId"
      ],
      "properties": {
        "displayName": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "webSupported": {
          "type": "boolean",
          "default": true
        },
        "tabletSupported": {
          "type": "boolean",
          "default": true
        },
        "mobileSupported": {
          "type": "boolean",
          "default": true
        },
        "screenId": {
          "type": "string"
        }
      }
    },
    "DashboardMenuGroupInfo": {
      "type": "object",
      "required": [
        "name",
        "displayName",
        "webSupported",
        "tabletSupported",
        "mobileSupported",
        "menus"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "order": {
          "type": "integer"
        },
        "webSupported": {
          "type": "boolean",
          "default": true
        },
        "tabletSupported": {
          "type": "boolean",
          "default": true
        },
        "mobileSupported": {
          "type": "boolean",
          "default": true
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "menus": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DashboardMenu"
          }
        }
      }
    },
    "DashboardMenuGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/DashboardMenuGroupInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        }
      ]
    },
    "DashboardMenuGroupEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/DashboardMenuGroup"
        }
      }
    },
    "DashboardMenuGroupEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/DashboardMenuGroupEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "DashboardMenuGroupArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DashboardMenuGroup"
          }
        }
      }
    },
    "DashboardMenuGroupArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/DashboardMenuGroupArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "PaddingConfig": {
      "type": "object",
      "properties": {
        "left": {
          "type": "number",
          "format": "double"
        },
        "top": {
          "type": "number",
          "format": "double"
        },
        "right": {
          "type": "number",
          "format": "double"
        },
        "bottom": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "RadiusConfig": {
      "type": "object",
      "required": [
        "radType"
      ],
      "properties": {
        "radType": {
          "type": "string",
          "enum": [
            "ZERO",
            "CIRCULAR",
            "ELLIPTICAL"
          ]
        },
        "rad": {
          "type": "number",
          "format": "double"
        },
        "xRad": {
          "type": "number",
          "format": "double"
        },
        "yRad": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ImageFitConfig": {
      "type": "object",
      "required": [
        "fit"
      ],
      "properties": {
        "fit": {
          "type": "string",
          "enum": [
            "NONE",
            "CONTAIN",
            "COVER",
            "FILL",
            "FIT_HEIGHT",
            "FIT_WIDTH",
            "SCALE_DOWN"
          ]
        }
      }
    },
    "AlignmentConfig": {
      "type": "object",
      "required": [
        "alignment"
      ],
      "properties": {
        "alignment": {
          "type": "string",
          "enum": [
            "BOTTOM_RIGHT",
            "BOTTOM_LEFT",
            "CENTER",
            "CENTER_LEFT",
            "CENTER_RIGHT",
            "TOP_RIGHT",
            "TOP_LEFT",
            "TOP_CENTER",
            "BOTTOM_CENTER"
          ]
        }
      }
    },
    "BorderConfig": {
      "type": "object",
      "required": [
        "type"
      ],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "ZERO",
            "ALL",
            "ONLY",
            "HORIZONTAL",
            "VERTICAL",
            "CIRCULAR"
          ]
        },
        "color": {
          "type": "integer",
          "format": "int64"
        },
        "width": {
          "type": "number",
          "format": "double"
        },
        "allRadius": {
          "$ref": "#/definitions/RadiusConfig"
        },
        "leftRadius": {
          "$ref": "#/definitions/RadiusConfig"
        },
        "rightRadius": {
          "$ref": "#/definitions/RadiusConfig"
        },
        "topRadius": {
          "$ref": "#/definitions/RadiusConfig"
        },
        "bottomRadius": {
          "$ref": "#/definitions/RadiusConfig"
        },
        "topLeftRadius": {
          "$ref": "#/definitions/RadiusConfig"
        },
        "bottomLeftRadius": {
          "$ref": "#/definitions/RadiusConfig"
        },
        "topRightRadius": {
          "$ref": "#/definitions/RadiusConfig"
        },
        "bottomRightRadius": {
          "$ref": "#/definitions/RadiusConfig"
        },
        "circularRadius": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "TwinFontConfig": {
      "type": "object",
      "properties": {
        "fontFamily": {
          "type": "string"
        },
        "fontColor": {
          "type": "integer",
          "format": "int64"
        },
        "fontSize": {
          "type": "number",
          "format": "double"
        },
        "fontBold": {
          "type": "boolean"
        }
      }
    },
    "TitleConfig": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "bgColor": {
          "type": "integer",
          "format": "int64"
        },
        "titleFont": {
          "$ref": "#/definitions/TwinFontConfig"
        },
        "titleAlignment": {
          "$ref": "#/definitions/AlignmentConfig"
        }
      }
    },
    "ScreenChild": {
      "type": "object",
      "required": [
        "widgetId",
        "config"
      ],
      "properties": {
        "widgetId": {
          "type": "string"
        },
        "config": {
          "type": "object"
        },
        "width": {
          "type": "number",
          "format": "double"
        },
        "height": {
          "type": "number",
          "format": "double"
        },
        "bgColor": {
          "type": "integer",
          "format": "int64"
        },
        "bgImage": {
          "type": "string"
        },
        "expanded": {
          "type": "boolean"
        },
        "flex": {
          "type": "integer"
        },
        "titleConfig": {
          "$ref": "#/definitions/TitleConfig"
        },
        "titleAlignment": {
          "$ref": "#/definitions/AlignmentConfig"
        },
        "bgImageFit": {
          "$ref": "#/definitions/ImageFitConfig"
        },
        "paddingConfig": {
          "$ref": "#/definitions/PaddingConfig"
        },
        "marginConfig": {
          "$ref": "#/definitions/PaddingConfig"
        },
        "childBorderConfig": {
          "$ref": "#/definitions/BorderConfig"
        },
        "alignment": {
          "$ref": "#/definitions/AlignmentConfig"
        }
      }
    },
    "ScreenRow": {
      "type": "object",
      "required": [
        "children"
      ],
      "properties": {
        "height": {
          "type": "number",
          "format": "double"
        },
        "spacing": {
          "type": "number",
          "format": "double"
        },
        "bgColor": {
          "type": "integer",
          "format": "int64"
        },
        "bgImage": {
          "type": "string"
        },
        "mainAxisAlignment": {
          "type": "string"
        },
        "crossAxisAlignment": {
          "type": "string"
        },
        "mainAxisSize": {
          "type": "string"
        },
        "scrollDirection": {
          "type": "string"
        },
        "titleConfig": {
          "$ref": "#/definitions/TitleConfig"
        },
        "bgImageFit": {
          "$ref": "#/definitions/ImageFitConfig"
        },
        "paddingConfig": {
          "$ref": "#/definitions/PaddingConfig"
        },
        "marginConfig": {
          "$ref": "#/definitions/PaddingConfig"
        },
        "rowBorderConfig": {
          "$ref": "#/definitions/BorderConfig"
        },
        "children": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScreenChild"
          }
        }
      }
    },
    "DashboardScreenInfo": {
      "type": "object",
      "required": [
        "name",
        "title",
        "rows"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "bannerImage": {
          "type": "string"
        },
        "spacing": {
          "type": "number",
          "format": "double"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "bgColor": {
          "type": "integer",
          "format": "int64"
        },
        "bgImage": {
          "type": "string"
        },
        "mainAxisAlignment": {
          "type": "string"
        },
        "crossAxisAlignment": {
          "type": "string"
        },
        "mainAxisSize": {
          "type": "string"
        },
        "scrollDirection": {
          "type": "string"
        },
        "bannerHeight": {
          "type": "number",
          "format": "double"
        },
        "titleConfig": {
          "$ref": "#/definitions/TitleConfig"
        },
        "bannerImageFit": {
          "$ref": "#/definitions/ImageFitConfig"
        },
        "bgImageFit": {
          "$ref": "#/definitions/ImageFitConfig"
        },
        "screenBorderConfig": {
          "$ref": "#/definitions/BorderConfig"
        },
        "paddingConfig": {
          "$ref": "#/definitions/PaddingConfig"
        },
        "marginConfig": {
          "$ref": "#/definitions/PaddingConfig"
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScreenRow"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "priority": {
          "type": "integer"
        }
      }
    },
    "DashboardScreen": {
      "allOf": [
        {
          "$ref": "#/definitions/DashboardScreenInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        }
      ]
    },
    "DashboardScreenEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/DashboardScreen"
        }
      }
    },
    "DashboardScreenEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/DashboardScreenEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "DashboardScreenArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DashboardScreen"
          }
        }
      }
    },
    "DashboardScreenArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/DashboardScreenArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "DeviceDataBase": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/DeviceData"
        }
      }
    },
    "DeviceDataEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/DeviceDataBase"
        },
        {
          "type": "object"
        }
      ]
    },
    "EventRegistrationInfo": {
      "type": "object",
      "required": [
        "eventId"
      ],
      "properties": {
        "eventId": {
          "type": "string"
        },
        "notification": {
          "type": "boolean"
        },
        "email": {
          "type": "boolean"
        },
        "sms": {
          "type": "boolean"
        },
        "voice": {
          "type": "boolean"
        },
        "fcm": {
          "type": "boolean"
        },
        "emailId": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "targetDeviceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "EventRegistrationBase": {
      "type": "object",
      "required": [
        "userId"
      ],
      "properties": {
        "userId": {
          "type": "string"
        }
      }
    },
    "EventRegistration": {
      "allOf": [
        {
          "$ref": "#/definitions/EventRegistrationInfo"
        },
        {
          "$ref": "#/definitions/EventRegistrationBase"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "EventRegistrationEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/EventRegistration"
        }
      }
    },
    "EventRegistrationEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/EventRegistrationEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "EventRegistrationArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventRegistration"
          }
        }
      }
    },
    "EventRegistrationArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/EventRegistrationArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "TriggeredEvent": {
      "type": "object",
      "required": [
        "eventId",
        "eventType"
      ],
      "properties": {
        "eventId": {
          "type": "string"
        },
        "modelId": {
          "type": "string"
        },
        "deviceId": {
          "type": "string"
        },
        "hardwareDeviceId": {
          "type": "string"
        },
        "notificationTitle": {
          "type": "string"
        },
        "notificationContent": {
          "type": "string"
        },
        "emailSubject": {
          "type": "string"
        },
        "emailContent": {
          "type": "string"
        },
        "smsMessage": {
          "type": "string"
        },
        "fcmTitle": {
          "type": "string"
        },
        "fcmContent": {
          "type": "string"
        },
        "voiceMessage": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "eventType": {
          "type": "string",
          "enum": [
            "NOTIFICATION",
            "EMAIL",
            "SMS",
            "VOICE",
            "FCM"
          ]
        },
        "deliveryStatus": {
          "type": "string",
          "enum": [
            "QUEUED",
            "SENT",
            "DELIVERED",
            "FAILED"
          ]
        },
        "deliveryErrors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "deviceIcon": {
          "type": "string"
        },
        "domainKey": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "rtype": {
          "type": "string"
        },
        "createdStamp": {
          "type": "integer",
          "format": "int64"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedBy": {
          "type": "string"
        },
        "updatedStamp": {
          "type": "integer",
          "format": "int64"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modelName": {
          "type": "string"
        },
        "deviceName": {
          "type": "string"
        },
        "assetId": {
          "type": "string"
        },
        "assetName": {
          "type": "string"
        },
        "premiseId": {
          "type": "string"
        },
        "premiseName": {
          "type": "string"
        },
        "facilityId": {
          "type": "string"
        },
        "facilityName": {
          "type": "string"
        },
        "floorId": {
          "type": "string"
        },
        "floorName": {
          "type": "string"
        },
        "sourceType": {
          "type": "string",
          "enum": [
            "MODEL",
            "DEVICE",
            "ASSET",
            "PREMISE",
            "FACILITY",
            "FLOOR"
          ]
        }
      }
    },
    "TriggeredEventArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TriggeredEvent"
          }
        }
      }
    },
    "TriggeredEventArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/TriggeredEventArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "TriggeredControlArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TriggeredControl"
          }
        }
      }
    },
    "TriggeredControlArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/TriggeredControlArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "DomainEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Domain"
        }
      }
    },
    "DomainEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/DomainEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "LoginResBase": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserInfo"
          }
        }
      }
    },
    "LoginRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/LoginResBase"
        },
        {
          "type": "object"
        }
      ]
    },
    "DisplayWidgetInfo": {
      "type": "object",
      "required": [
        "name",
        "modelId",
        "widgetType",
        "attributes"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "modelId": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tooltip": {
          "type": "string"
        },
        "widgetType": {
          "type": "string"
        },
        "attributes": {
          "type": "object"
        }
      }
    },
    "DisplayWidget": {
      "allOf": [
        {
          "$ref": "#/definitions/DisplayWidgetInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "DisplayWidgetEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/DisplayWidget"
        }
      }
    },
    "DisplayWidgetEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/DisplayWidgetEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "DisplayWidgetArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DisplayWidget"
          }
        }
      }
    },
    "DisplayWidgetArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/DisplayWidgetArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "ScreenWidgetInfo": {
      "type": "object",
      "required": [
        "name",
        "widgetType",
        "attributes"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tooltip": {
          "type": "string"
        },
        "widgetType": {
          "type": "string"
        },
        "attributes": {
          "type": "object"
        },
        "target": {
          "type": "string",
          "enum": [
            "SCREEN",
            "ANALYTICS",
            "DEVICE"
          ]
        }
      }
    },
    "ScreenWidget": {
      "allOf": [
        {
          "$ref": "#/definitions/ScreenWidgetInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "ScreenWidgetEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ScreenWidget"
        }
      }
    },
    "ScreenWidgetEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ScreenWidgetEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "ScreenWidgetArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScreenWidget"
          }
        }
      }
    },
    "ScreenWidgetArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/ScreenWidgetArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "GeoLocation": {
      "type": "object",
      "required": [
        "coordinates"
      ],
      "properties": {
        "type": {
          "type": "string",
          "default": "Point"
        },
        "coordinates": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          },
          "description": "coordinates should be longitude, latitude"
        }
      }
    },
    "GeoLine": {
      "type": "object",
      "required": [
        "begin",
        "end"
      ],
      "properties": {
        "begin": {
          "$ref": "#/definitions/GeoLocation"
        },
        "end": {
          "$ref": "#/definitions/GeoLocation"
        }
      }
    },
    "GeoEnvelope": {
      "type": "object",
      "required": [
        "leftTop",
        "rightBottom"
      ],
      "properties": {
        "leftTop": {
          "$ref": "#/definitions/GeoLocation"
        },
        "rightBottom": {
          "$ref": "#/definitions/GeoLocation"
        }
      }
    },
    "GeoPolygon": {
      "type": "object",
      "required": [
        "points"
      ],
      "properties": {
        "points": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoLocation"
          }
        }
      }
    },
    "GeoMultiPoint": {
      "type": "object",
      "required": [
        "first",
        "second"
      ],
      "properties": {
        "first": {
          "$ref": "#/definitions/GeoLocation"
        },
        "second": {
          "$ref": "#/definitions/GeoLocation"
        }
      }
    },
    "GeoMultiLine": {
      "type": "object",
      "required": [
        "points"
      ],
      "properties": {
        "points": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoLine"
          }
        }
      }
    },
    "GeoMultiPolygon": {
      "type": "object",
      "required": [
        "points"
      ],
      "properties": {
        "points": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoPolygon"
          }
        }
      }
    },
    "GeoCircle": {
      "type": "object",
      "required": [
        "center",
        "radius"
      ],
      "properties": {
        "center": {
          "$ref": "#/definitions/GeoLocation"
        },
        "radius": {
          "type": "integer",
          "description": "radius in feet"
        }
      }
    },
    "PreprocessorInfo": {
      "type": "object",
      "required": [
        "name",
        "className"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "className": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Preprocessor": {
      "allOf": [
        {
          "$ref": "#/definitions/PreprocessorInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "PreprocessorEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Preprocessor"
        }
      }
    },
    "PreprocessorEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/PreprocessorEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "PreprocessorArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Preprocessor"
          }
        }
      }
    },
    "PreprocessorArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/PreprocessorArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "FilterMatchGroup": {
      "type": "object",
      "required": [
        "matchType",
        "conditions"
      ],
      "properties": {
        "matchType": {
          "type": "string",
          "enum": [
            "ANY",
            "ALL"
          ]
        },
        "conditionIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "DataFilterInfo": {
      "type": "object",
      "required": [
        "name",
        "label",
        "matchGroups",
        "target"
      ],
      "properties": {
        "modelId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "matchGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterMatchGroup"
          }
        },
        "target": {
          "type": "string",
          "enum": [
            "USER",
            "APP"
          ]
        }
      }
    },
    "DataFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/DataFilterInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "DataFilterEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/DataFilter"
        }
      }
    },
    "DataFilterEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/DataFilterEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "DataFilterArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataFilter"
          }
        }
      }
    },
    "DataFilterArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/DataFilterArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "GeoFenceInfo": {
      "type": "object",
      "required": [
        "name",
        "label",
        "fenceType"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "fenceType": {
          "type": "string",
          "enum": [
            "POINT",
            "LINE",
            "ENVELOPE",
            "POLYGON",
            "MULTIPOINT",
            "MULTILINE",
            "MULTIPOLYGON",
            "CIRCLE"
          ]
        },
        "point": {
          "$ref": "#/definitions/GeoLocation"
        },
        "line": {
          "$ref": "#/definitions/GeoLine"
        },
        "envelope": {
          "$ref": "#/definitions/GeoEnvelope"
        },
        "polygon": {
          "$ref": "#/definitions/GeoPolygon"
        },
        "multipoint": {
          "$ref": "#/definitions/GeoMultiPoint"
        },
        "multiline": {
          "$ref": "#/definitions/GeoMultiLine"
        },
        "multipolygon": {
          "$ref": "#/definitions/GeoMultiPolygon"
        },
        "circle": {
          "$ref": "#/definitions/GeoCircle"
        }
      }
    },
    "GeoFenceBase": {
      "type": "object",
      "required": [
        "fence"
      ],
      "properties": {
        "fence": {
          "type": "object"
        }
      }
    },
    "GeoFence": {
      "allOf": [
        {
          "$ref": "#/definitions/GeoFenceInfo"
        },
        {
          "$ref": "#/definitions/GeoFenceBase"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "GeoFenceEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/GeoFence"
        }
      }
    },
    "GeoFenceEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/GeoFenceEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "GeoFenceArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GeoFence"
          }
        }
      }
    },
    "GeoFenceArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/GeoFenceArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "AnalyticsRow": {
      "type": "object",
      "required": [
        "height",
        "flex",
        "widgetIds"
      ],
      "properties": {
        "height": {
          "type": "integer"
        },
        "flex": {
          "type": "integer"
        },
        "widgetIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "label": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "AnalyticsScreenInfo": {
      "type": "object",
      "required": [
        "name",
        "rows"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "showDefault": {
          "type": "boolean",
          "default": false
        },
        "rows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnalyticsRow"
          }
        }
      }
    },
    "AnalyticsScreen": {
      "allOf": [
        {
          "$ref": "#/definitions/AnalyticsScreenInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "AnalyticsScreenEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/AnalyticsScreen"
        }
      }
    },
    "AnalyticsScreenEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/AnalyticsScreenEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "AnalyticsScreenArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AnalyticsScreen"
          }
        }
      }
    },
    "AnalyticsScreenArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/AnalyticsScreenArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "TrendValue": {
      "type": "object",
      "required": [
        "stamp"
      ],
      "properties": {
        "stamp": {
          "type": "integer",
          "format": "int64"
        },
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "min": {
          "type": "number",
          "format": "double"
        },
        "max": {
          "type": "number",
          "format": "double"
        },
        "avg": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "TrendValueArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TrendValue"
          }
        }
      }
    },
    "TrendValueArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/TrendValueArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "TimeSeriesValue": {
      "type": "object",
      "required": [
        "updatedStamp"
      ],
      "properties": {
        "updatedStamp": {
          "type": "integer",
          "format": "int64"
        },
        "data": {
          "type": "object"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "TimeSeriesValueArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TimeSeriesValue"
          }
        }
      }
    },
    "TimeSeriesValueArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/TimeSeriesValueArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "ElasticEmailConfig": {
      "type": "object",
      "required": [
        "fromEmail",
        "apiKey"
      ],
      "properties": {
        "fromEmail": {
          "type": "string"
        },
        "apiKey": {
          "type": "string"
        }
      }
    },
    "TwilioConfig": {
      "type": "object",
      "required": [
        "accountSid",
        "authToken",
        "phoneNumber"
      ],
      "properties": {
        "accountSid": {
          "type": "string"
        },
        "authToken": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "voice": {
          "type": "string"
        }
      }
    },
    "GeoapifyConfig": {
      "type": "object",
      "required": [
        "apiKey"
      ],
      "properties": {
        "apiKey": {
          "type": "string"
        }
      }
    },
    "TwinSysInfoBase": {
      "type": "object",
      "properties": {
        "elasticEmailConfig": {
          "$ref": "#/definitions/ElasticEmailConfig"
        },
        "twilioConfig": {
          "$ref": "#/definitions/TwilioConfig"
        },
        "geoapifyConfig": {
          "$ref": "#/definitions/GeoapifyConfig"
        }
      }
    },
    "TwinSysInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/TwinSysInfoBase"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "TwinSysInfoEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/TwinSysInfo"
        }
      }
    },
    "TwinSysInfoEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/TwinSysInfoEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "FloorInfo": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "premiseId": {
          "type": "string"
        },
        "facilityId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "floorPlan": {
          "type": "string"
        },
        "assets": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "location": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fence": {
          "$ref": "#/definitions/GeoLocation"
        },
        "floorLevel": {
          "type": "integer",
          "default": 0
        },
        "floorType": {
          "type": "string",
          "enum": [
            "ONGROUND",
            "ABOVEGROUND",
            "BELOWGROUND"
          ],
          "default": "ONGROUND"
        },
        "reportedStamp": {
          "type": "integer",
          "format": "int64"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "stateProvince": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "zipcode": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        }
      }
    },
    "Floor": {
      "allOf": [
        {
          "$ref": "#/definitions/FloorInfo"
        },
        {
          "$ref": "#/definitions/AddressInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "FloorEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Floor"
        }
      }
    },
    "FloorEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/FloorEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "FloorArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Floor"
          }
        }
      }
    },
    "FloorArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/FloorArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "AssetInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/DisplayableEntity"
        }
      ],
      "type": "object",
      "required": [
        "name",
        "assetModelId"
      ],
      "properties": {
        "premiseId": {
          "type": "string"
        },
        "facilityId": {
          "type": "string"
        },
        "floorId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "devices": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "location": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fence": {
          "$ref": "#/definitions/GeoLocation"
        },
        "position": {
          "$ref": "#/definitions/ScreenPosition"
        },
        "assetModelId": {
          "type": "string"
        },
        "reportedStamp": {
          "type": "integer",
          "format": "int64"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "stateProvince": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "zipcode": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        }
      }
    },
    "AssetBase": {
      "type": "object",
      "properties": {
        "currentLocation": {
          "$ref": "#/definitions/GeoLocation"
        }
      }
    },
    "Asset": {
      "allOf": [
        {
          "$ref": "#/definitions/AssetInfo"
        },
        {
          "$ref": "#/definitions/AssetBase"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "AssetEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Asset"
        }
      }
    },
    "AssetEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/AssetEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "AssetArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Asset"
          }
        }
      }
    },
    "AssetArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/AssetArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "FacilityInfo": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "premiseId": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "selectedImage": {
          "type": "integer"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "location": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fence": {
          "$ref": "#/definitions/GeoLocation"
        },
        "reportedStamp": {
          "type": "integer",
          "format": "int64"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "stateProvince": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "zipcode": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        }
      }
    },
    "Facility": {
      "allOf": [
        {
          "$ref": "#/definitions/FacilityInfo"
        },
        {
          "$ref": "#/definitions/AddressInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "FacilityEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Facility"
        }
      }
    },
    "FacilityEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/FacilityEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "FacilityArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Facility"
          }
        }
      }
    },
    "FacilityArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/FacilityArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "UserInfo": {
      "type": "object",
      "required": [
        "user",
        "domain"
      ],
      "properties": {
        "user": {
          "$ref": "#/definitions/TwinLoggedInUser"
        },
        "domain": {
          "$ref": "#/definitions/Domain"
        },
        "client": {
          "$ref": "#/definitions/Client"
        }
      }
    },
    "TwinUserInfo": {
      "type": "object",
      "required": [
        "name",
        "email"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "phone": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "stateProvince": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "zipcode": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "selectedImageId": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TwinUserExt": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        }
      }
    },
    "TwinUser": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseDomainEntity"
        },
        {
          "$ref": "#/definitions/TwinUserInfo"
        },
        {
          "$ref": "#/definitions/TwinUserExt"
        },
        {
          "$ref": "#/definitions/AddressInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "TwinUserTokenExt": {
      "type": "object",
      "required": [
        "token"
      ],
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "TwinLoggedInUser": {
      "allOf": [
        {
          "$ref": "#/definitions/TwinUser"
        },
        {
          "$ref": "#/definitions/TwinUserTokenExt"
        },
        {
          "type": "object"
        }
      ]
    },
    "TwinUserEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/TwinUser"
        }
      }
    },
    "TwinUserEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/TwinUserEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "TwinUserArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TwinUser"
          }
        }
      }
    },
    "TwinUserArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/TwinUserArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "RoleInfo": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Role": {
      "allOf": [
        {
          "$ref": "#/definitions/RoleInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "RoleEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Role"
        }
      }
    },
    "RoleEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/RoleEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "RoleArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Role"
          }
        }
      }
    },
    "RoleArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/RoleArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "PremiseInfo": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "selectedImage": {
          "type": "integer"
        },
        "images": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "location": {
          "$ref": "#/definitions/GeoLocation"
        },
        "fence": {
          "$ref": "#/definitions/GeoLocation"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reportedStamp": {
          "type": "integer",
          "format": "int64"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "stateProvince": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "zipcode": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        }
      }
    },
    "Premise": {
      "allOf": [
        {
          "$ref": "#/definitions/PremiseInfo"
        },
        {
          "$ref": "#/definitions/AddressInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "PremiseEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Premise"
        }
      }
    },
    "PremiseEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/PremiseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "PremiseArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Premise"
          }
        }
      }
    },
    "PremiseArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/PremiseArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "ScreenPosition": {
      "type": "object",
      "required": [
        "topX",
        "topY"
      ],
      "properties": {
        "topX": {
          "type": "integer"
        },
        "topY": {
          "type": "integer"
        },
        "bottomX": {
          "type": "integer"
        },
        "bottomY": {
          "type": "integer"
        }
      }
    },
    "Attribute": {
      "type": "object",
      "required": [
        "name",
        "attributeType",
        "value"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "attributeType": {
          "type": "string",
          "enum": [
            "YESNO",
            "NUMERIC",
            "FLOATING",
            "TEXT"
          ]
        },
        "value": {
          "type": "string"
        },
        "editable": {
          "type": "boolean",
          "default": true
        },
        "validator": {
          "type": "string",
          "enum": [
            "NONE",
            "FIXED",
            "RANGE"
          ]
        },
        "allowedValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedNumbers": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "allowedDecimals": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "minNumber": {
          "type": "integer",
          "format": "int64"
        },
        "maxNumber": {
          "type": "integer",
          "format": "int64"
        },
        "minDecimal": {
          "type": "number",
          "format": "double"
        },
        "maxDecimal": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "ScrappingTableInfo": {
      "type": "object",
      "required": [
        "name",
        "attributes"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attribute"
          }
        }
      }
    },
    "ScrappingTable": {
      "allOf": [
        {
          "$ref": "#/definitions/ScrappingTableInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "ScrappingTableEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ScrappingTable"
        }
      }
    },
    "ScrappingTableEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ScrappingTableEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "ScrappingTableArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ScrappingTable"
          }
        }
      }
    },
    "ScrappingTableArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/ScrappingTableArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "Tags": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FloorStats": {
      "type": "object",
      "properties": {
        "assets": {
          "type": "integer",
          "format": "int64"
        },
        "devices": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "FloorStatsEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/FloorStats"
        }
      }
    },
    "FloorStatsEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/FloorStatsEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "FacilityStats": {
      "type": "object",
      "properties": {
        "floors": {
          "type": "integer",
          "format": "int64"
        },
        "assets": {
          "type": "integer",
          "format": "int64"
        },
        "devices": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "FacilityStatsEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/FacilityStats"
        }
      }
    },
    "FacilityStatsEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/FacilityStatsEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "PremiseStats": {
      "type": "object",
      "properties": {
        "facilities": {
          "type": "integer",
          "format": "int64"
        },
        "floors": {
          "type": "integer",
          "format": "int64"
        },
        "assets": {
          "type": "integer",
          "format": "int64"
        },
        "devices": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "PremiseStatsEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/PremiseStats"
        }
      }
    },
    "PremiseStatsEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/PremiseStatsEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "TagsRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/Tags"
        },
        {
          "type": "object"
        }
      ]
    },
    "CustomWidget": {
      "type": "object",
      "required": [
        "id",
        "attributes"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "attributes": {
          "type": "object"
        }
      }
    },
    "SensorWidget": {
      "type": "object",
      "required": [
        "widgetId",
        "attributes"
      ],
      "properties": {
        "widgetId": {
          "type": "string"
        },
        "attributes": {
          "type": "object"
        }
      }
    },
    "AssetGroupInfo": {
      "type": "object",
      "required": [
        "name",
        "target",
        "assetIds"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "target": {
          "type": "string",
          "enum": [
            "USER",
            "APP"
          ]
        },
        "assetIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "icon": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        }
      }
    },
    "AssetGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/AssetGroupInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "AssetGroupEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/AssetGroup"
        }
      }
    },
    "AssetGroupEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/AssetGroupEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "AssetGroupArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetGroup"
          }
        }
      }
    },
    "AssetGroupArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/AssetGroupArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "ReportInfo": {
      "type": "object",
      "required": [
        "modelId",
        "name",
        "fields",
        "target"
      ],
      "properties": {
        "modelId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "includePremise": {
          "type": "boolean"
        },
        "includeFacility": {
          "type": "boolean"
        },
        "includeFloor": {
          "type": "boolean"
        },
        "includeAsset": {
          "type": "boolean"
        },
        "includeDevice": {
          "type": "boolean"
        },
        "humanDateFormat": {
          "type": "boolean"
        },
        "dateFormat": {
          "type": "string"
        },
        "tz": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "target": {
          "type": "string",
          "enum": [
            "USER",
            "APP"
          ]
        },
        "clientId": {
          "type": "string"
        }
      }
    },
    "Report": {
      "allOf": [
        {
          "$ref": "#/definitions/ReportInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "ReportEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Report"
        }
      }
    },
    "ReportEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ReportEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "ReportArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Report"
          }
        }
      }
    },
    "ReportArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/ReportArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "AssetScrappingTable": {
      "type": "object",
      "required": [
        "lookupName",
        "scrappingTableId",
        "scrappingTableName",
        "attributes"
      ],
      "properties": {
        "lookupName": {
          "type": "string"
        },
        "scrappingTableId": {
          "type": "string"
        },
        "scrappingTableName": {
          "type": "string"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attribute"
          }
        }
      }
    },
    "AssetDeviceModel": {
      "type": "object",
      "required": [
        "deviceModelId"
      ],
      "properties": {
        "deviceModelId": {
          "type": "string"
        },
        "scrappingTables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetScrappingTable"
          }
        }
      }
    },
    "AssetModelInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/DisplayableEntity"
        }
      ],
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "metadata": {
          "type": "object"
        },
        "movable": {
          "type": "boolean"
        },
        "allowedDeviceModels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetDeviceModel"
          }
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clientId": {
          "type": "string"
        }
      }
    },
    "AssetModel": {
      "allOf": [
        {
          "$ref": "#/definitions/AssetModelInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "AssetModelEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/AssetModel"
        }
      }
    },
    "AssetModelEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/AssetModelEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "AssetModelArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssetModel"
          }
        }
      }
    },
    "AssetModelArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/AssetModelArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "IDList": {
      "type": "object",
      "required": [
        "total",
        "values"
      ],
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "IDListEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/IDList"
        },
        {
          "type": "object"
        }
      ]
    },
    "FieldFilterInfo": {
      "type": "object",
      "required": [
        "name",
        "field",
        "fieldType",
        "condition",
        "target"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "icon": {
          "type": "string"
        },
        "field": {
          "type": "string"
        },
        "fieldType": {
          "type": "string",
          "enum": [
            "YESNO",
            "NUMERIC",
            "FLOATING",
            "TEXT"
          ]
        },
        "condition": {
          "type": "string",
          "enum": [
            "LT",
            "LTE",
            "GT",
            "GTE",
            "EQ",
            "NEQ",
            "BETWEEN",
            "NBETWEEN",
            "CONTAINS",
            "NCONTAINS"
          ]
        },
        "value": {
          "type": "string"
        },
        "leftValue": {
          "type": "string"
        },
        "rightValue": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "target": {
          "type": "string",
          "enum": [
            "USER",
            "APP"
          ]
        },
        "clientId": {
          "type": "string"
        }
      }
    },
    "FieldFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/FieldFilterInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "FieldFilterEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/FieldFilter"
        }
      }
    },
    "FieldFilterEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/FieldFilterEntity"
        },
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "type": "object"
        }
      ]
    },
    "FieldFilterArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldFilter"
          }
        }
      }
    },
    "FieldFilterArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/FieldFilterArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "ParameterArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Parameter"
          }
        }
      }
    },
    "ParameterArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/ParameterArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "AddressInfo": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "stateProvince": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "zipcode": {
          "type": "string"
        }
      }
    },
    "ClientInfoBase": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "countryCode": {
          "type": "string"
        },
        "stateProvince": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "zipcode": {
          "type": "string"
        },
        "allowRegistration": {
          "type": "boolean"
        },
        "location": {
          "$ref": "#/definitions/GeoLocation"
        }
      }
    },
    "ClientInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/DisplayableEntity"
        },
        {
          "$ref": "#/definitions/ClientInfoBase"
        }
      ],
      "type": "object"
    },
    "Client": {
      "allOf": [
        {
          "$ref": "#/definitions/ClientInfo"
        },
        {
          "$ref": "#/definitions/AddressInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "ClientEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/Client"
        }
      }
    },
    "ClientEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ClientEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "ClientArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Client"
          }
        }
      }
    },
    "ClientArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/ClientArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "BaseQueryRes": {
      "type": "object",
      "properties": {
        "result": {
          "type": "object"
        }
      }
    },
    "QueryRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/BaseQueryRes"
        },
        {
          "type": "object"
        }
      ]
    },
    "BaseCountRes": {
      "type": "object",
      "required": [
        "total"
      ],
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CountRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/BaseCountRes"
        },
        {
          "type": "object"
        }
      ]
    },
    "ParameterUnits": {
      "type": "object",
      "required": [
        "units"
      ],
      "properties": {
        "units": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ParameterUnitsEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ParameterUnits"
        }
      }
    },
    "ParameterUnitsEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/ParameterUnitsEntity"
        },
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "type": "object"
        }
      ]
    },
    "UserRegistration": {
      "type": "object",
      "required": [
        "domainKey",
        "email",
        "name"
      ],
      "properties": {
        "domainKey": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "default": {}
        }
      }
    },
    "RegistrationRes": {
      "type": "object",
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "type": "integer"
        },
        "msg": {
          "type": "string"
        },
        "trace": {
          "type": "string"
        },
        "domainKey": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "pinToken": {
          "type": "string"
        },
        "pin": {
          "type": "string",
          "description": "in test mode, pin will be directly returned"
        }
      }
    },
    "VerificationReq": {
      "type": "object",
      "required": [
        "domainKey",
        "pinToken",
        "pin"
      ],
      "properties": {
        "domainKey": {
          "type": "string"
        },
        "pinToken": {
          "type": "string"
        },
        "pin": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        }
      }
    },
    "Login": {
      "type": "object",
      "required": [
        "userId",
        "password"
      ],
      "properties": {
        "userId": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "domainKey": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        }
      }
    },
    "ForgotPassword": {
      "type": "object",
      "required": [
        "userId"
      ],
      "properties": {
        "userId": {
          "type": "string"
        },
        "domainKey": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        }
      }
    },
    "ResetPassword": {
      "type": "object",
      "required": [
        "pinToken",
        "pin",
        "password",
        "domainKey"
      ],
      "properties": {
        "pinToken": {
          "type": "string"
        },
        "pin": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "domainKey": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        }
      }
    },
    "ChangePassword": {
      "type": "object",
      "required": [
        "oldPassword",
        "newPassword"
      ],
      "properties": {
        "oldPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      }
    },
    "ChangeEmail": {
      "type": "object",
      "required": [
        "email"
      ],
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "ReprocessInfo": {
      "type": "object",
      "required": [
        "hardwareDeviceId",
        "clearHistory",
        "clearStatus"
      ],
      "properties": {
        "hardwareDeviceId": {
          "type": "string"
        },
        "clearHistory": {
          "type": "boolean",
          "default": false
        },
        "clearStatus": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "NonReportingReq": {
      "type": "object",
      "properties": {
        "intervalHours": {
          "type": "integer",
          "default": 24
        },
        "timeZone": {
          "type": "string",
          "default": "GMT"
        },
        "size": {
          "type": "integer",
          "default": 1000
        }
      }
    },
    "UnregisterAccount": {
      "type": "object",
      "required": [
        "reason",
        "password"
      ],
      "properties": {
        "reason": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "domainKey": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        }
      }
    },
    "CustomSearchReqBase": {
      "type": "object",
      "required": [
        "fields"
      ],
      "properties": {
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sort": {
          "type": "object"
        }
      }
    },
    "CustomSearchReq": {
      "allOf": [
        {
          "$ref": "#/definitions/SearchReqBase"
        },
        {
          "$ref": "#/definitions/CustomSearchReqBase"
        },
        {
          "$ref": "#/definitions/ListReq"
        },
        {
          "type": "object"
        }
      ]
    },
    "CustomEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "type": "object"
        }
      }
    },
    "CustomEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/CustomEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "CustomEntityArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "CustomEntityArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/CustomEntityArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "CustomEntityField": {
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "scalingFactor": {
          "type": "number",
          "format": "float",
          "description": "required if type is **scaled_float**"
        },
        "aliasPath": {
          "type": "string",
          "description": "required if type is **alias**"
        },
        "type": {
          "type": "string",
          "enum": [
            "BINARY",
            "BOOLEAN",
            "KEYWORD",
            "CONSTANT_KEYWORD",
            "WILDCARD",
            "DATE",
            "DATE_NANOS",
            "ALIAS",
            "OBJECT",
            "FLATTENED",
            "NESTED",
            "LONG_RANGE",
            "DOUBLE_RANGE",
            "DATE_RANGE",
            "IP_RANGE",
            "IP",
            "VERSION",
            "MURMUR3",
            "AGGREGATE_METRIC_DOUBLE",
            "HISTOGRAM",
            "TEXT",
            "MATCH_ONLY_TEXT",
            "COMPLETION",
            "SEARCH_AS_YOU_TYPE",
            "SEMANTIC_TEXT",
            "TOKEN_COUNT",
            "DENSE_VECTOR",
            "SPARSE_VECTOR",
            "RANK_FEATURE",
            "RANK_FEATURES",
            "GEO_POINT",
            "GEO_SHAPE",
            "POINT",
            "SHAPE",
            "LONG",
            "INTEGER",
            "SHORT",
            "BYTE",
            "DOUBLE",
            "FLOAT",
            "HALF_FLOAT",
            "SCALED_FLOAT",
            "UNSIGNED_LONG"
          ]
        }
      }
    },
    "CustomEntityMappingInfo": {
      "type": "object",
      "required": [
        "name",
        "fields",
        "relaxed"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "relaxed": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomEntityField"
          }
        }
      }
    },
    "CustomEntityMapping": {
      "allOf": [
        {
          "$ref": "#/definitions/CustomEntityMappingInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "CustomEntityMappingEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/CustomEntityMapping"
        }
      }
    },
    "CustomEntityMappingRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/CustomEntityMappingEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "CustomEntityMappingArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CustomEntityMapping"
          }
        }
      }
    },
    "CustomEntityMappingArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/CustomEntityMappingArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "ApiTokenInfo": {
      "type": "object",
      "required": [
        "role"
      ],
      "properties": {
        "role": {
          "type": "string",
          "enum": [
            "ADMIN",
            "DOMAIN",
            "CLIENT"
          ]
        },
        "domainKey": {
          "type": "string",
          "description": "required if role is DOMAIN or CLIENT"
        },
        "clientId": {
          "type": "string",
          "description": "required if role is CLIENT"
        }
      }
    },
    "ApiToken": {
      "allOf": [
        {
          "$ref": "#/definitions/ApiTokenInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "ApiTokenEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/ApiToken"
        }
      }
    },
    "ApiTokenEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ApiTokenEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "ApiTokenArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApiToken"
          }
        }
      }
    },
    "ApiTokenArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/ApiTokenArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "EqlTemplateInfo": {
      "type": "object",
      "required": [
        "name",
        "query"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "transformerCode": {
          "type": "string"
        },
        "protocol": {
          "type": "string",
          "default": "POST",
          "enum": [
            "POST",
            "GET",
            "PUT",
            "DELETE"
          ]
        },
        "extraPath": {
          "type": "string",
          "default": "/_search"
        }
      }
    },
    "EqlTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/EqlTemplateInfo"
        },
        {
          "$ref": "#/definitions/BaseEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "EqlTemplateEntity": {
      "type": "object",
      "properties": {
        "entity": {
          "$ref": "#/definitions/EqlTemplate"
        }
      }
    },
    "EqlTemplateEntityRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/EqlTemplateEntity"
        },
        {
          "type": "object"
        }
      ]
    },
    "EqlTemplateArray": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EqlTemplate"
          }
        }
      }
    },
    "EqlTemplateArrayRes": {
      "allOf": [
        {
          "$ref": "#/definitions/BaseResponse"
        },
        {
          "$ref": "#/definitions/ListRes"
        },
        {
          "$ref": "#/definitions/EqlTemplateArray"
        },
        {
          "type": "object"
        }
      ]
    },
    "EqlExecuteReq": {
      "type": "object",
      "required": [
        "eqlTemplateName",
        "index"
      ],
      "properties": {
        "eqlTemplateName": {
          "type": "string"
        },
        "index": {
          "type": "string"
        },
        "mergeContext": {
          "type": "object"
        },
        "bindingContext": {
          "type": "object"
        }
      }
    }
  }
}